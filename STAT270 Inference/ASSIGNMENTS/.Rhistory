}
hist(x_bar)
#return(x_bar)
cat("mean = ", mean(x_bar))
cat("variance = ", var(x_bar))
}
simulate.exp(n=3, R=10, beta=2)
simulate.exp(n=3, R=1000, beta=2) # lower n = 3 is less normal than higher n = 50 > 30
simulate.exp = function(n, R, beta) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rexp(n, rate=1/beta)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("mean = ", mean(x_bar), "\n")
cat("variance = ", var(x_bar), "\n")
}
simulate.exp(n=3, R=1000, beta=2) # lower n = 3 is less normal than higher n = 50 > 30
simulate.exp(n=50, R=1000, beta=2)
simulate.exp(n=1000, R=1000, beta=2)
simulate.exp = function(n, R, beta) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rexp(n, rate=1/beta)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", beta,"\n")
cat("variance = ", var(x_bar), "\ttheoretical.var =", beta^2/n,"\n")
}
simulate.exp(n=3, R=10, beta=2)
simulate.exp(n=3, R=1000, beta=2) # lower n = 3 is less normal than higher n = 50 > 30
simulate.exp(n=50, R=1000, beta=2)
simulate.exp(n=1000, R=1000, beta=2)
simulate.norm = function(n, R, mu, sigma2) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rnorm(n=n, mean=mu, sd=sqrt(sigma2))
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("variance = ", var(x_bar), "\ttheoretical.var =", sigma2/n,"\n")
}
simulate.norm = function(n, R, mu, sigma) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rnorm(n=n, mean=mu, sd=sigma)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("variance = ", var(x_bar), "\ttheoretical.var =", sigma^2/n,"\n")
}
simulate.norm(n=9, R=10000, mu=3, sigma=4)
simulate.norm = function(n, R, mu, sigma) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rnorm(n=n, mean=mu, sd=sigma)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("variance = ", var(x_bar), "\ttheoretical.var =", sigma^2/n,"\n")
return(invisible(x_bar))
}
x_bar = simulate.norm(n=9, R=10000, mu=3, sigma=4)
sum(x_bar <= 5 && x_bar >= 1)/length(x_bar)
z1 = (1-3)/(4/sqrt(9)))
z1 = (1-3)/(4/sqrt(9))
z1 = (1-3)/(4/sqrt(9)); z1
z2 = (5-3)/(4/sqrt(9)); z2
diff(pnorm(c(z1, z2), mean=0, sd=1))
x_bar <= 5 && x_bar >= 1
x_bar
x_bar <= 5
sum(x_bar <= 5)
sum(x_bar >= 1)
xs = 1:20
sum(xs >= 10 && xs <= 12)
sum(xs >= 10 & xs <= 12)
sum(x_bar <= 5 & x_bar >= 1)/length(x_bar)
simulate.norm(n=10, mu=3, sigma=5)
simulate.norm(n=10, R=10000, mu=3, sigma=5)
simulate.norm(n=100, R=10000, mu=3, sigma=5)
simulate.norm(n=1000, R=10000, mu=3, sigma=5)
simulate.norm(n=3, R=10000, mu=3, sigma=5)
simulate.gammaMax = function(n, R, alpha, beta) {
x_max = rep(NA, R)
for(i in 1:R) {
x = rgamma(n=n, shape=alpha, scale=beta)
x_max[i] = max(x)
}
hist(x_max)
cat("sim.mean = ", mean(x_max)) #, "\ttheoretical.mean =", mu,"\n") ???
cat("variance = ", var(x_max)) #, "\ttheoretical.var =", sigma^2/n,"\n") ???
return(invisible(x_max))
}
simulate.gammaMax(n=10, R=10000, alpha=2, beta=1/2) # this is chisquare df = 1
simulate.gammaMax = function(n, R, alpha, beta) {
x_max = rep(NA, R)
for(i in 1:R) {
x = rgamma(n=n, shape=alpha, scale=beta)
x_max[i] = max(x)
}
hist(x_max)
cat("sim.max = ", mean(x_max), "\n") #, "\ttheoretical.mean =", mu,"\n") ???
return(invisible(x_max))
}
simulate.gammaMax(n=10, R=10000, alpha=2, beta=1/2) # this is chisquare df = 1
simulate.gammaMax(n=10, R=10000, alpha=2, beta=1/2) # this is chisquare df = 1
simulate.gammaMax(n=10, R=10000, alpha=2, beta=1/2) # this is chisquare df = 1
simulate.gammaMax(n=10, R=10000, alpha=2, beta=1/2) # this is chisquare df = 1
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT270 Inference/Week 1 - Simulations, Bootstrap, CLT/Example 7.1 book.R', echo=TRUE)
diff(pnorm(c(-sqrt(2), sqrt(2))))
qnorm((1-0.80)/2)
pnorm((0.5-(5-4.8))/sqrt(2*0.25^2/9), lower.tail = F)
pnorm((0-(5 - 4.8))/sqrt(2*0.25^2/9))
A1 = rep(0,N) ; B1 = rep(0,N)
A2 = rep(0,N) ; B2 = rep(0,N)
A3 = rep(0,N) ; B3 = rep(0,N)
A4 = rep(0,N) ; B4 = rep(0,N)
A5 = rep(0,N) ; B5 = rep(0,N)
A6 = rep(0,N) ; B6 = rep(0,N)
A7 = rep(0,N) ; B7 = rep(0,N)
A8 = rep(0,N) ; B8 = rep(0,N)
A9 = rep(0,N) ; B9 = rep(0,N)
# The mean of the random variables above, for each N.
X_bar_A = rep(0,N)
X_bar_B = rep(0, N)
for (i in 1:N) {
A1[i] = rnorm(n=1, mean=5, sd=0.25); B1[i] = rnorm(n=1, mean=4.8, sd=0.25)
A2[i] = rnorm(n=1, mean=5, sd=0.25); B2[i] = rnorm(n=1, mean=4.8, sd=0.25)
A3[i] = rnorm(n=1, mean=5, sd=0.25); B3[i] = rnorm(n=1, mean=4.8, sd=0.25)
A4[i] = rnorm(n=1, mean=5, sd=0.25); B4[i] = rnorm(n=1, mean=4.8, sd=0.25)
A5[i] = rnorm(n=1, mean=5, sd=0.25); B5[i] = rnorm(n=1, mean=4.8, sd=0.25)
A6[i] = rnorm(n=1, mean=5, sd=0.25); B6[i] = rnorm(n=1, mean=4.8, sd=0.25)
A7[i] = rnorm(n=1, mean=5, sd=0.25); B7[i] = rnorm(n=1, mean=4.8, sd=0.25)
A8[i] = rnorm(n=1, mean=5, sd=0.25);  B8[i] = rnorm(n=1, mean=4.8, sd=0.25)
A9[i] = rnorm(n=1, mean=5, sd=0.25); B9[i] = rnorm(n=1, mean=4.8, sd=0.25)
X_bar_A[i] = mean(c(A1[i],A2[i],A3[i],A4[i],A5[i],A6[i],A7[i],A8[i],A9[i]))
X_bar_B[i] = mean(c(B1[i],B2[i],B3[i],B4[i],B5[i],B6[i],B7[i],B8[i],B9[i]))
}
hist(X_bar_A, ylab = "Frequency",xlab = "Mean of GPA from School A")
mean(X_bar_A)
sd(X_bar_A)
var(X_bar_A)
X_bar_A = rep(0,N)
N = 1000
A1 = rep(0,N) ; B1 = rep(0,N)
A2 = rep(0,N) ; B2 = rep(0,N)
A3 = rep(0,N) ; B3 = rep(0,N)
A4 = rep(0,N) ; B4 = rep(0,N)
A5 = rep(0,N) ; B5 = rep(0,N)
A6 = rep(0,N) ; B6 = rep(0,N)
A7 = rep(0,N) ; B7 = rep(0,N)
A8 = rep(0,N) ; B8 = rep(0,N)
A9 = rep(0,N) ; B9 = rep(0,N)
# The mean of the random variables above, for each N.
X_bar_A = rep(0,N)
X_bar_B = rep(0, N)
for (i in 1:N) {
A1[i] = rnorm(n=1, mean=5, sd=0.25); B1[i] = rnorm(n=1, mean=4.8, sd=0.25)
A2[i] = rnorm(n=1, mean=5, sd=0.25); B2[i] = rnorm(n=1, mean=4.8, sd=0.25)
A3[i] = rnorm(n=1, mean=5, sd=0.25); B3[i] = rnorm(n=1, mean=4.8, sd=0.25)
A4[i] = rnorm(n=1, mean=5, sd=0.25); B4[i] = rnorm(n=1, mean=4.8, sd=0.25)
A5[i] = rnorm(n=1, mean=5, sd=0.25); B5[i] = rnorm(n=1, mean=4.8, sd=0.25)
A6[i] = rnorm(n=1, mean=5, sd=0.25); B6[i] = rnorm(n=1, mean=4.8, sd=0.25)
A7[i] = rnorm(n=1, mean=5, sd=0.25); B7[i] = rnorm(n=1, mean=4.8, sd=0.25)
A8[i] = rnorm(n=1, mean=5, sd=0.25);  B8[i] = rnorm(n=1, mean=4.8, sd=0.25)
A9[i] = rnorm(n=1, mean=5, sd=0.25); B9[i] = rnorm(n=1, mean=4.8, sd=0.25)
X_bar_A[i] = mean(c(A1[i],A2[i],A3[i],A4[i],A5[i],A6[i],A7[i],A8[i],A9[i]))
X_bar_B[i] = mean(c(B1[i],B2[i],B3[i],B4[i],B5[i],B6[i],B7[i],B8[i],B9[i]))
}
hist(X_bar_A, ylab = "Frequency",xlab = "Mean of GPA from School A")
mean(X_bar_A)
sd(X_bar_A)
var(X_bar_A)
hist(X_bar_B, ylab = "Frequency",xlab = "Mean of GPA from School B")
mean(X_bar_B)
sd(X_bar_B)
var(X_bar_B)
simulate.norm = function(n, R, mu, sigma) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rnorm(n=n, mean=mu, sd=sigma)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("variance = ", var(x_bar), "\ttheoretical.var =", sigma^2/n,"\n")
return(invisible(x_bar))
}
X_bar_A_2 = simulate.norm(n=9, R=1000, mu=5, sigma=0.25)
simulate.norm = function(n, R, mu, sigma) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rnorm(n=n, mean=mu, sd=sigma)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("sd = ", sd(x_bar), "\ttheoretical.sd =", sigma/sqrt(n),"\n")
return(invisible(x_bar))
}
X_bar_A_2 = simulate.norm(n=9, R=1000, mu=5, sigma=0.25)
X_bar_A_2 = simulate.norm(n=9, R=1000, mu=5, sigma=0.25)
X_bar_B_2 = simulate.norm(n=9, R=1000, mu=4.8, sigma=0.25)
X_bar_B_2 = simulate.norm(n=9, R=1000, mu=4.8, sigma=0.25)
X_bar_B_2 = simulate.norm(n=9, R=1000, mu=4.8, sigma=0.25)
X_bar_A_2 = simulate.norm(n=9, R=10000, mu=5, sigma=0.25)
X_bar_B_2 = simulate.norm(n=9, R=10000, mu=4.8, sigma=0.25)
X_bar_A_2 = simulate.norm(n=9, R=10000, mu=5, sigma=0.25)
X_bar_A_2 = simulate.norm(n=9, R=10000, mu=5, sigma=0.25)
X_bar_B_2 = simulate.norm(n=9, R=10000, mu=4.8, sigma=0.25)
hist(X_bar_A, ylab = "Frequency",xlab = "Mean of GPA from School A")
simulate.norm = function(n, R, mu, sigma) {
x_bar = rep(NA, R) # create empty vector first with length R = num replicates.
for(i in 1:R) {
data = rnorm(n=n, mean=mu, sd=sigma)
x_bar[i] = mean(data)
}
hist(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("sd = ", sd(x_bar), "\ttheoretical.sd =", sigma/sqrt(n),"\n")
return(invisible(x_bar))
}
simulate.norm(n=9, R=2, mu=3, sigma=4)
simulate.norm(n=9, R=2, mu=3, sigma=4)
sum(x_bar <= 5 & x_bar >= 1)/length(x_bar) # close to theoretical!
x_bar = simulate.norm(n=9, R=10000, mu=3, sigma=4)
x_bar = simulate.norm(n=9, R=10000, mu=3, sigma=4)
sum(x_bar <= 5 & x_bar >= 1)/length(x_bar) # close to theoretical!
diff(pnorm(c(1, 5), mean=3, sd=4/sqrt(9)))
y1 = sample(c(1,2,3,4,5,6), size=1, replace = T)
y1
y2 = sample(c(1,2,3,4,5,6), size=1, replace = T)
y2
y3 = sample(c(1,2,3,4,5,6), size=1, replace = T)
y3
y_bar = mean(c(y1,y2,y3))
y_bar
N=1000;
y1 = rep(0,N) ## create a vector size N with all values are 0 to store the results
y2 = rep(0,N)
y3 = rep(0,N)
y_bar=rep(0,N)
for (i in 1:N) {
y1[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y2[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y3[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y_bar[i] = mean(c(y1[i],y2[i],y3[i]))
}
hist(y_bar,ylab = "Frequency",xlab = "Mean of 3 tosses")
summary(y_bar)
mean(y_bar)
sd(y_bar)
var(y_bar)
X_bar_A[1:20]
X_bar_A[1:10]
options(digits=5)
X_bar_A[1:10]
options(digits=7)
X_bar_A[1:10]
options(digits=6)
X_bar_A[1:10]
X_bar_A_2[1:10]
for (i in 1:N) {
A1[i] = rnorm(n=1, mean=5, sd=0.25); B1[i] = rnorm(n=1, mean=4.8, sd=0.25)
A2[i] = rnorm(n=1, mean=5, sd=0.25); B2[i] = rnorm(n=1, mean=4.8, sd=0.25)
A3[i] = rnorm(n=1, mean=5, sd=0.25); B3[i] = rnorm(n=1, mean=4.8, sd=0.25)
A4[i] = rnorm(n=1, mean=5, sd=0.25); B4[i] = rnorm(n=1, mean=4.8, sd=0.25)
A5[i] = rnorm(n=1, mean=5, sd=0.25); B5[i] = rnorm(n=1, mean=4.8, sd=0.25)
A6[i] = rnorm(n=1, mean=5, sd=0.25); B6[i] = rnorm(n=1, mean=4.8, sd=0.25)
A7[i] = rnorm(n=1, mean=5, sd=0.25); B7[i] = rnorm(n=1, mean=4.8, sd=0.25)
A8[i] = rnorm(n=1, mean=5, sd=0.25);  B8[i] = rnorm(n=1, mean=4.8, sd=0.25)
A9[i] = rnorm(n=1, mean=5, sd=0.25); B9[i] = rnorm(n=1, mean=4.8, sd=0.25)
X_bar_A[i] = mean(c(A1[i],A2[i],A3[i],A4[i],A5[i],A6[i],A7[i],A8[i],A9[i]))
X_bar_B[i] = mean(c(B1[i],B2[i],B3[i],B4[i],B5[i],B6[i],B7[i],B8[i],B9[i]))
}
cbind(X_bar_A[1:10, X_bar_A_2[1:10])
cbind(X_bar_A[1:10], X_bar_A_2[1:10])
X_bar_A_2 = simulate.norm(n=9, R=10000, mu=5, sigma=0.25)
cbind(X_bar_A[1:10], X_bar_A_2[1:10])
cbind(X_bar_A[1:10], X_bar_A_2[1:10])
cbind(X_bar_B[1:10], X_bar_B_2[1:10])
N = 10000
A1 = rep(0,N) ; B1 = rep(0,N)
A2 = rep(0,N) ; B2 = rep(0,N)
A3 = rep(0,N) ; B3 = rep(0,N)
A4 = rep(0,N) ; B4 = rep(0,N)
A5 = rep(0,N) ; B5 = rep(0,N)
A6 = rep(0,N) ; B6 = rep(0,N)
A7 = rep(0,N) ; B7 = rep(0,N)
A8 = rep(0,N) ; B8 = rep(0,N)
A9 = rep(0,N) ; B9 = rep(0,N)
length(X_bar_A)
length(X_bar_A_2)
X_bar_A = rep(0,N)
X_bar_B = rep(0, N)
for (i in 1:N) {
A1[i] = rnorm(n=1, mean=5, sd=0.25); B1[i] = rnorm(n=1, mean=4.8, sd=0.25)
A2[i] = rnorm(n=1, mean=5, sd=0.25); B2[i] = rnorm(n=1, mean=4.8, sd=0.25)
A3[i] = rnorm(n=1, mean=5, sd=0.25); B3[i] = rnorm(n=1, mean=4.8, sd=0.25)
A4[i] = rnorm(n=1, mean=5, sd=0.25); B4[i] = rnorm(n=1, mean=4.8, sd=0.25)
A5[i] = rnorm(n=1, mean=5, sd=0.25); B5[i] = rnorm(n=1, mean=4.8, sd=0.25)
A6[i] = rnorm(n=1, mean=5, sd=0.25); B6[i] = rnorm(n=1, mean=4.8, sd=0.25)
A7[i] = rnorm(n=1, mean=5, sd=0.25); B7[i] = rnorm(n=1, mean=4.8, sd=0.25)
A8[i] = rnorm(n=1, mean=5, sd=0.25);  B8[i] = rnorm(n=1, mean=4.8, sd=0.25)
A9[i] = rnorm(n=1, mean=5, sd=0.25); B9[i] = rnorm(n=1, mean=4.8, sd=0.25)
X_bar_A[i] = mean(c(A1[i],A2[i],A3[i],A4[i],A5[i],A6[i],A7[i],A8[i],A9[i]))
X_bar_B[i] = mean(c(B1[i],B2[i],B3[i],B4[i],B5[i],B6[i],B7[i],B8[i],B9[i]))
}
hist(X_bar_A, ylab = "Frequency",xlab = "Mean of GPA from School A")
mean(X_bar_A)
sd(X_bar_A)
hist(X_bar_B, ylab = "Frequency",xlab = "Mean of GPA from School B")
mean(X_bar_B)
sd(X_bar_B)
for (i in 1:N) {
A1[i] = rnorm(n=1, mean=5, sd=0.25); B1[i] = rnorm(n=1, mean=4.8, sd=0.25)
A2[i] = rnorm(n=1, mean=5, sd=0.25); B2[i] = rnorm(n=1, mean=4.8, sd=0.25)
A3[i] = rnorm(n=1, mean=5, sd=0.25); B3[i] = rnorm(n=1, mean=4.8, sd=0.25)
A4[i] = rnorm(n=1, mean=5, sd=0.25); B4[i] = rnorm(n=1, mean=4.8, sd=0.25)
A5[i] = rnorm(n=1, mean=5, sd=0.25); B5[i] = rnorm(n=1, mean=4.8, sd=0.25)
A6[i] = rnorm(n=1, mean=5, sd=0.25); B6[i] = rnorm(n=1, mean=4.8, sd=0.25)
A7[i] = rnorm(n=1, mean=5, sd=0.25); B7[i] = rnorm(n=1, mean=4.8, sd=0.25)
A8[i] = rnorm(n=1, mean=5, sd=0.25);  B8[i] = rnorm(n=1, mean=4.8, sd=0.25)
A9[i] = rnorm(n=1, mean=5, sd=0.25); B9[i] = rnorm(n=1, mean=4.8, sd=0.25)
X_bar_A[i] = mean(c(A1[i],A2[i],A3[i],A4[i],A5[i],A6[i],A7[i],A8[i],A9[i]))
X_bar_B[i] = mean(c(B1[i],B2[i],B3[i],B4[i],B5[i],B6[i],B7[i],B8[i],B9[i]))
}
mean(X_bar_A)
sd(X_bar_A)
mean(X_bar_B)
sd(X_bar_B)
simulate.norm = function(n, R, mu, sigma) {
x_bar = rep(NA, R) # create empty vector first with length R = num replicates.
for(i in 1:R) {
# data vector holds the n iid random samples so this would be
# equivalent to the data A1, A2, .. A9 above when drawing from
# the Normal distribution of School A gpa's.
data = rnorm(n=n, mean=mu, sd=sigma)
x_bar[i] = mean(data)
}
hist(x_bar)
# Comparing the simulated mean and standard deviation with
# the theoretical ones.
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("sim.sd = ", sd(x_bar), "\ttheoretical.sd =", sigma/sqrt(n),"\n")
return(invisible(x_bar))
}
X_bar_A_2 = simulate.norm(n=9, R=10000, mu=5, sigma=0.25)
X_bar_A_second = simulate.norm(n=9, R=10000, mu=5, sigma=0.25)
X_bar_B_second = simulate.norm(n=9, R=10000, mu=4.8, sigma=0.25)
X_bar_A - X_bar_A_second
round(X_bar_A - X_bar_A_second, 5)
N
N = 10000
## create vectors with size N to store values. These vectors represent the random
# sample of size 9. A1 to A9 represent the sample of size 9 from school A, and
# B1 ... B9 are the iid random sample from school B. They carry observed or
# simulated values.
A1 = rep(0,N) ; B1 = rep(0,N)
A2 = rep(0,N) ; B2 = rep(0,N)
A3 = rep(0,N) ; B3 = rep(0,N)
A4 = rep(0,N) ; B4 = rep(0,N)
A5 = rep(0,N) ; B5 = rep(0,N)
A6 = rep(0,N) ; B6 = rep(0,N)
A7 = rep(0,N) ; B7 = rep(0,N)
A8 = rep(0,N) ; B8 = rep(0,N)
A9 = rep(0,N) ; B9 = rep(0,N)
# The mean of the random variables above, for each N.
X_bar_A = rep(0,N)
X_bar_B = rep(0, N)
for (i in 1:N) {
A1[i] = rnorm(n=1, mean=5, sd=0.25); B1[i] = rnorm(n=1, mean=4.8, sd=0.25)
A2[i] = rnorm(n=1, mean=5, sd=0.25); B2[i] = rnorm(n=1, mean=4.8, sd=0.25)
A3[i] = rnorm(n=1, mean=5, sd=0.25); B3[i] = rnorm(n=1, mean=4.8, sd=0.25)
A4[i] = rnorm(n=1, mean=5, sd=0.25); B4[i] = rnorm(n=1, mean=4.8, sd=0.25)
A5[i] = rnorm(n=1, mean=5, sd=0.25); B5[i] = rnorm(n=1, mean=4.8, sd=0.25)
A6[i] = rnorm(n=1, mean=5, sd=0.25); B6[i] = rnorm(n=1, mean=4.8, sd=0.25)
A7[i] = rnorm(n=1, mean=5, sd=0.25); B7[i] = rnorm(n=1, mean=4.8, sd=0.25)
A8[i] = rnorm(n=1, mean=5, sd=0.25);  B8[i] = rnorm(n=1, mean=4.8, sd=0.25)
A9[i] = rnorm(n=1, mean=5, sd=0.25); B9[i] = rnorm(n=1, mean=4.8, sd=0.25)
X_bar_A[i] = mean(c(A1[i],A2[i],A3[i],A4[i],A5[i],A6[i],A7[i],A8[i],A9[i]))
X_bar_B[i] = mean(c(B1[i],B2[i],B3[i],B4[i],B5[i],B6[i],B7[i],B8[i],B9[i]))
}
hist(X_bar_A, ylab = "Frequency",xlab = "Mean of GPA from School A")
mean(X_bar_A)
sd(X_bar_A)
hist(X_bar_B, ylab = "Frequency",xlab = "Mean of GPA from School B")
mean(X_bar_B)
sd(X_bar_B)
# METHOD 2 ------------------------
# General function: returns a vector of length R where each entry is the
# mean of n data points drawn from the Normal(mu, sigma^2) distribution.
# n = sample size to take (number of iid random variables)
# R = number of replications = number of times we draw the n samples.
simulate.norm = function(n, R, mu, sigma) {
x_bar = rep(NA, R) # create empty vector first with length R = num replicates.
for(i in 1:R) {
# data vector holds the n iid random samples so this would be
# equivalent to the data A1, A2, .. A9 above when drawing from
# the Normal distribution of School A gpa's.
data = rnorm(n=n, mean=mu, sd=sigma)
x_bar[i] = mean(data)
}
hist(x_bar)
# Comparing the simulated mean and standard deviation with
# the theoretical ones.
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("sim.sd = ", sd(x_bar), "\ttheoretical.sd =", sigma/sqrt(n),"\n")
return(invisible(x_bar))
}
X_bar_A_second = simulate.norm(n=9, R=N, mu=5, sigma=0.25)
X_bar_B_second = simulate.norm(n=9, R=N, mu=4.8, sigma=0.25)
round(X_bar_A - X_bar_A_second, 5)
sum(X_bar_A - X_bar_A_second > 0.1)
sum(X_bar_A - X_bar_A_second > 0.1)/N
library(boot)
set.seed(123)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT270 Inference/ASSIGNMENTS/Assignment1_CLTAndBootstrap.R', echo=TRUE)
n
xbar
bootmean <- function(dataVector, index) mean(dataVector[index])
set.seed(123)
bootstrapMean(data=movieData, R = 10000)
b.mean <- boot(x=movieData, bootmean, R=10000, stype="i")
bootmean <- function(d, i) mean(d[i])
boot(x=movieData, bootmean, R=10000, stype="i")
boot(x=movieData, statistic=bootmean, R=10000, stype="i")
boot(data = =movieData, statistic=bootmean, R=10000, stype="i")
boot(data =movieData, statistic=bootmean, R=10000, stype="i")
set.seed(123)
boot(data =movieData, statistic=bootmean, R=10000, stype="i")
set.seed(123)
boot(data =movieData, statistic=bootmean, R=10000, stype="i")
set.seed(123)
bootstrapMean(data=movieData, R=10000)
set.seed(123)
b1 = boot(data =movieData, statistic=bootmean, R=10000, stype="i")
b1
boot.ci(b1)
bootstrapMean(data=movieData, R = 10000)
set.seed(123)
bootstrapMean(data=movieData, R = 10000)
set.seed(123)
boot.ci(b1)
b1$statistic()
b1$t0
b1$t
sd(b1$t)
set.seed(123)
b1.mine = bootstrapMean(data=movieData, R = 10000)
sd(b1.mine)
data.frame(b1.theirs = b1$t, b1.mine=b1.mine)
d = data.frame(b1.theirs = b1$t, b1.mine=b1.mine)
head(d)
set.seed(123)
bootstrapStandardDeviation(movieData, R=10000)
set.seed(123)
bootsd <- function(d, i) sd(d[i])
b2 <- boot(data=movieData, bootsd, R=10000, stype="i")
b2 #
sqrt(var(b2$t))
set.seed(123)
b2.mine = bootstrapStandardDeviation(movieData, R=10000)
mean(b2.mine)
sd(b2.mine)
b2 #
b1.mine
set.seed(123)
bootstrapMean(movieData, R=10000)
set.seed(123); bootstrapStandardDeviation(movieData, R=10000)
b2 #
length(b2.mine)
sd(b2.mine) - sd(movieData)
mean(b2.mine) - sd(movieData)
set.seed(123); bootstrapStandardDeviation(movieData, R=10000)
boot.ci(b2)
set.seed(123); bootstrapMean(movieData, R=10000)
boot.ci(b1)
b1 #
b2 #
sd(b2.mine) - sd(movieData)
mean(b2.mine) - sd(movieData)
set.seed(123); bootstrapStandardDeviation(movieData, R=10000)
b1#
boot.ci(b1)
b1$seed
b1$statistic(1)
b1$statistic([1,2])
b1$statistic(c(1,2))
set.seed(123)
bootstrapStandardDeviation(movieData, R=10000)
hstars = b2.mine
sum((hstars - sd(hstars))^2)/(10000-1)
sqrt(sum((hstars - sd(hstars))^2)/(10000-1))
b2#
val =sqrt(sum((hstars - sd(hstars))^2)/(10000-1))
val - sd(movieData)
mean(hstars)-sd(movieData)
b2 #
