source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/StatsFormulas.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[PennState] GeneralizedLinearModels/BinaryLogisticRegression/X_One,Discrete,ManyLevels_Delinquency.R', echo=TRUE)
B.model
B.model$y
B.model$fitted.values
setwd("/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[ChristopherBilder] Analysis Of Categorical Data With R")
placekick <- read.csv("data/Placekick.csv")
head(placekick)
tail(placekick)
change.dist.model <- glm(good ~ change + distance, family=binomial(link="logit"), data=placekick)
change.dist.model
dist.model <- glm(good ~ distance, family=binomial(link="logit"), data=placekick)
dist.model
dist.model$y
dist.model$fitted.values
sum((dist.model$y - dist.model$fitted.values)/dist.model$fitted.values)
dist.model$residuals
head(dist.model$residuals)
sum(dist.model$residuals^2)
glow <- load("glow500.rda")
getwd()
source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/StatsFormulas.R')
setwd("/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[PennState] GeneralizedLinearModels/BinaryLogisticRegression")
glow <- load("glow500.rda")
glow
glow500
head(glow500)
names(glow500)
head(glow500)
glow.model <- glm(fracture ~ age + height + priorfrac + momfrac + armassist +
raterisk3 + age:priorfrac + momfrac:armassist,
family=binomial(logit))
glow.model <- glm(fracture ~ age + height + priorfrac + momfrac + armassist +
raterisk3 + age:priorfrac + momfrac:armassist,
data=glow500,
family=binomial(logit))
glow.model <- glm(fracture ~ age + height + priorfrac + momfrac + armassist +
raterisk + age:priorfrac + momfrac:armassist,
data=glow500,
family=binomial(logit))
coef(glow.model)
glow.model <- glm(fracture ~ age + weight + priorfrac + premeno + raterisk,
data=glow500,
family=binomial(logit))
coef(glow.model)
ResidualDeviance(glow.model)
NullDeviance(glow.model)
anova(glow.model)
sum(glow500$fracture == "Yes")
mean(glow500$fracture == "Yes")
glow.model <- glm(fracture ~ age + height + priorfrac + momfrac + armassist +
raterisk + age:priorfrac + momfrac:armassist,
data=glow500,
family=binomial(logit))
coef(glow.model)
glow500$raterisk
rr <- glow500$raterisk
rr[rr != "Greater"]
rr != "Greater"
rr
rr <- glow500$raterisk; head(rr)
rr <- glow500$raterisk; head(rr,20)
head(rr != "Greater",20)
if(rr != "Greater") "Same/Less" else "Greater"
data.frame(rr)
for(i in 1:length(rr)){
if(rr[i] != "Greater") rr2[i] <- "Same/Less"
}
rr2 <- rr
for(i in 1:length(rr)){
if(rr[i] != "Greater") rr2[i] <- "Same/Less"
}
rr2
which(rr != "Greater")
rr2
for(i in 1:length(rr)){
if(rr[i] != "Greater") rr[i] <- "Same/Less"
}
rr
rr <- glow500$raterisk
rr2 <- rr
rr[348]
rr[348] <- "Same/Less"
rr[348] <- factor("Same/Less")
rr[348] <- factor("Same/Less", levels=c("Same/Less", "Greater"))
rr[348]
rr <- glow500$raterisk
rr[348]
class(rr[348])
as.factor("Same/Less")
factor("Same/Less")
as.factor("Same/Less", levels=c("Same/Less", "Greater"))
factor("Same/Less", levels=c("Same/Less", "Greater"))
r[348] <- factor("Same/Less", levels=c("Same/Less", "Greater"))
rr[348] <- factor("Same/Less", levels=c("Same/Less", "Greater"))
rr[348] <- factor("Same/Less", levels=c("Same/Less", "Greater"), stringsAsFactors=FALSE)
r[344]
rr[344]
rr <- glow500$raterisk
rr2 <- rr
1:length(rr)
for(i in 1:length(rr)){
if(rr[i] != "Greater") rr[i] <- factor("Same/Less",levels=c("Same/Less","Greater"))
else rr[i] <- factor("Greater",levels=c("Same/Less","Greater"))
}
head(rr)
rr <- glow500$raterisk
rr[348] <- factor(c("Same/Less"), levels=c("Same/Less", "Greater"))
rr <- glow500$raterisk
rr348 <- rr[348]
rr348
as.vector(rr348)
class(as.vector(rr348))
as.character(rr348)
as.character(rr)
rr2 <- as.character(rr)
rr <- glow500$raterisk
rr2 <- as.character(rr)
for(i in 1:length(rr)){
if(rr[i] != "Greater") rr2[i] <- factor("Same/Less",levels=c("Same/Less","Greater"))
else rr2[i] <- factor("Greater",levels=c("Same/Less","Greater"))
}
head(rr)
head(rr2)
rr2
rr2 <- as.character(rr)
rr2
rr2[348]
rr2348 <- rr2[348]
rr2348 <- factor("Same/Less", levels=c("Same/Less","Greater"))
rr2348
rr[348]
rr != "Greater"
rr[496]
rr[496] != "Greater"
rr[496] == "Greater"
rr <- glow500$raterisk
rr2 <- as.character(rr)
for(i in 1:length(rr)){
if(rr[i] != "Greater") rr2[i] <- factor("Same/Less",levels=c("Same/Less","Greater"))
else rr2[i] <- factor("Greater",levels=c("Same/Less","Greater"))
}
rr2
rr
levels(rr2) <- c("Same/Less","Greater")
rr2
levels(rr2) <- c('Same/Less','Greater')
rr2
factor(rep(c(1,2,1), 50))
a <- factor(rep(c(1,2,1), 50))
levels(a) <- c("yes","no")
a
rr
iris
iris$Species
iris$Species[iris$Species == "virginica"] <- "setosa"
iris$Species
glow500$raterisk
glow500$raterisk_new <- glow500$raterisk
glow500$raterisk_new
glow500$raterisk_new[glow500$raterisk_new == "Same" || glow500$raterisk_new == "Less"] <- "Same/Less"
glow500$raterisk_new[glow500$raterisk_new == "Same"] <- "Same/Less"
glow500$raterisk_new <- glow500$raterisk
glow500$raterisk_new == glow500$raterisk
all(glow500$raterisk_new == glow500$raterisk)
g <- glow500$raterisk_new
head(g)
class(iris$Species)
class(g)
g[g == "Same"] <- "Same/Less"
iris3
iris
iris$Species[iris$Species == "virginica"] <- "setosa"
head(iris)
q()
