sample(x=50, size=50, replace=TRUE)
sample(x=50, size=50, replace=F)
unique(sample(x=50, size=50, replace=F))
sort(unique(sample(x=50, size=50, replace=F)))
sample(1:6, size=50, replace=TRUE)
throws=sample(1:6, size=50, replace=TRUE)
sum(throws==2)
throws=sample(1:6, size=50, replace=F)
throws=sample(1:6, size=50, replace=TRUE)
throws
table(throws)
sum(table(throws))
dbinom(x=4, size=50, p = 1/2)
pgeom(6, p=0.3)
pgeom(5, p=0.3)
pgeom(7, p=0.3, lower.tail=F)
pgeom(6, p=0.3, lower.tail=F)
pgeom(5, 0.3)
pgeom(6, 0.3, lower.tail = F)
1-pgeom(6, 0.3, lower.tail = T)
install.packages("boot")
library(boot)
help(boot)
y1 = sample(c(1,2,3,4,5,6), size=1, replace = T)
y1
y2 = sample(c(1,2,3,4,5,6), size=1, replace = T)
y2
y3 = sample(c(1,2,3,4,5,6), size=1, replace = T)
y3
y_bar = mean(c(y1,y2,y3))
y_bar
## Repeat the experiment above with N = 1000 times and oberserve the mean and sd of y_bar
N=1000;
y1= rep(0,N) ## create a vector size N with all values are 0 to store the results
y2=rep(0,N)
y3 = rep(0,N)
y_bar=rep(0,N)
for (i in 1:N) {
y1[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y2[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y3[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y_bar[i] = mean(c(y1[i],y2[i],y3[i]))
}
hist(y_bar,ylab = "Frequency",xlab = "Mean of 3 tosses")
summary(y_bar)
mean(y_bar)
sd(y_bar)
y_bar(2)
y_bar[2]
y_bar[1]
y_bar
y_bar == 2
sum(y_bar == 2)
sum(y_bar == 2) / length(y_bar)
y1 = rep(0,N) ## create a vector size N with all values are 0 to store the results
y2 = rep(0,N)
y3 = rep(0,N)
y4 = rep(0,N)
y5 = rep(0,N)
y6 = rep(0,N)
y7 = rep(0,N)
y_bar=rep(0,N)
for (i in 1:N) {
y1[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y2[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y3[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y4[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y5[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y6[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y7[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y_bar[i] = mean(c(y1[i],y2[i],y3[i]))
}
hist(y_bar,ylab = "Frequency",xlab = "Mean of 3 tosses")
summary(y_bar)
mean(y_bar)
sd(y_bar)
var(y_bar)
for (i in 1:N) {
y1[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y2[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y3[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y4[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y5[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y6[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y7[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y_bar[i] = mean(c(y1[i],y2[i],y3[i],y4[i],y5[i],y6[i],y7[i]))
}
hist(y_bar,ylab = "Frequency",xlab = "Mean of 3 tosses")
y8 = rep(0,N)
y9 = rep(0,N)
y10 = rep(0,N)
y11 = rep(0,N)
y12 = rep(0,N)
y_bar=rep(0,N)
for (i in 1:N) {
y1[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y2[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y3[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y4[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y5[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y6[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y7[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y8[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y9[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y10[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y11[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y12[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y_bar[i] = mean(c(y1[i],y2[i],y3[i],y4[i],y5[i],y6[i],y7[i],y8[i],y9[i],y10[i],y11[i],y12[i]))
}
hist(y_bar,ylab = "Frequency",xlab = "Mean of 3 tosses")
summary(y_bar)
mean(y_bar)
sd(y_bar)
var(y_bar)
y_bar=rep(0,N)
for (i in 1:N) {
y1[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y2[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y3[i] = sample(c(1,2,3,4,5,6), size=1, replace = T)
y_bar[i] = mean(c(y1[i],y2[i],y3[i]))
}
hist(y_bar,ylab = "Frequency",xlab = "Mean of 3 tosses")
summary(y_bar)
mean(y_bar)
sd(y_bar)
var(y_bar)
pnorm(0.025)
qnorm(0.025)
qchisq(0.05)
qchisq(0.05, df=9)
qchisq(0.95, df=9)
qf(0.95, df1=5, df2=9)
pnorm(-1.2)
pnorm(1.2)
pnorm(1.2) - pnorm(-1.2)
diff(pnorm(1.5),pnorm(-1.5))
pnorm(1.5)-pnorm(-1.5)
qnorm(0.90)
qnorm(0.05)
qchisq(0.975, df=19)
qchisq(0.025, df=19)
qt(0.05, df=8)
qt(0.95, df=8)
simulate.exp = function(n, R, beta) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rexp(n, rate=1/beta)
x_bar[i] = mean(x)
}
return(x_bar)
}
set.seed(5234)
beta = 2
expData <- rexp(n=3, rate=1/beta)
expData
x_bar = mean(expData)
x_bar = mean(expData); x_bar
R = 1000
x_bar = rep(NA, R)
for(i in 1:R){
data = rexp(n=3, rate=1/beta)
x_bar[i] = mean(data)
}
summary(x_bar)
mean(x_bar)
var(x_bar) # theoretical mean = beta^2/n = 4  / 3
hist(x_bar)
upper.x = max(x_bar) + 1
hist(x_bar, xlab="Mean of 3 data points (n = 3)", freq=F, main="",
breaks=seq(0, upper.x))
hist(x_bar, xlab="Mean of 3 data points (n = 3)", freq=F, main="",
breaks=seq(0, upper.x, by=0.2))
simulate.exp = function(n, R, beta) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rexp(n, rate=1/beta)
x_bar[i] = mean(x)
}
hist(x_bar)
return(x_bar)
}
simulate.exp(n=3, R=10, beta=2)
simulate.exp(n=3, R=1000, beta=2)
simulate.exp(n=50, R=1000, beta=2)
simulate.exp(n=1000, R=1000, beta=2)
simulate.exp = function(n, R, beta) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rexp(n, rate=1/beta)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("mean = ", mean(x_bar))
cat("variance = ", var(x_bar))
}
simulate.exp(n=3, R=10, beta=2)
simulate.exp(n=3, R=1000, beta=2) # lower n = 3 is less normal than higher n = 50 > 30
simulate.exp = function(n, R, beta) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rexp(n, rate=1/beta)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("mean = ", mean(x_bar), "\n")
cat("variance = ", var(x_bar), "\n")
}
simulate.exp(n=3, R=1000, beta=2) # lower n = 3 is less normal than higher n = 50 > 30
simulate.exp(n=50, R=1000, beta=2)
simulate.exp(n=1000, R=1000, beta=2)
simulate.exp = function(n, R, beta) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rexp(n, rate=1/beta)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", beta,"\n")
cat("variance = ", var(x_bar), "\ttheoretical.var =", beta^2/n,"\n")
}
simulate.exp(n=3, R=10, beta=2)
simulate.exp(n=3, R=1000, beta=2) # lower n = 3 is less normal than higher n = 50 > 30
simulate.exp(n=50, R=1000, beta=2)
simulate.exp(n=1000, R=1000, beta=2)
simulate.norm = function(n, R, mu, sigma2) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rnorm(n=n, mean=mu, sd=sqrt(sigma2))
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("variance = ", var(x_bar), "\ttheoretical.var =", sigma2/n,"\n")
}
simulate.norm = function(n, R, mu, sigma) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rnorm(n=n, mean=mu, sd=sigma)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("variance = ", var(x_bar), "\ttheoretical.var =", sigma^2/n,"\n")
}
simulate.norm(n=9, R=10000, mu=3, sigma=4)
simulate.norm = function(n, R, mu, sigma) {
x_bar = rep(NA, R)
for(i in 1:R) {
x = rnorm(n=n, mean=mu, sd=sigma)
x_bar[i] = mean(x)
}
hist(x_bar)
#return(x_bar)
cat("sim.mean = ", mean(x_bar), "\ttheoretical.mean =", mu,"\n")
cat("variance = ", var(x_bar), "\ttheoretical.var =", sigma^2/n,"\n")
return(invisible(x_bar))
}
x_bar = simulate.norm(n=9, R=10000, mu=3, sigma=4)
sum(x_bar <= 5 && x_bar >= 1)/length(x_bar)
z1 = (1-3)/(4/sqrt(9)))
z1 = (1-3)/(4/sqrt(9))
z1 = (1-3)/(4/sqrt(9)); z1
z2 = (5-3)/(4/sqrt(9)); z2
diff(pnorm(c(z1, z2), mean=0, sd=1))
x_bar <= 5 && x_bar >= 1
x_bar
x_bar <= 5
sum(x_bar <= 5)
sum(x_bar >= 1)
xs = 1:20
sum(xs >= 10 && xs <= 12)
sum(xs >= 10 & xs <= 12)
sum(x_bar <= 5 & x_bar >= 1)/length(x_bar)
simulate.norm(n=10, mu=3, sigma=5)
simulate.norm(n=10, R=10000, mu=3, sigma=5)
simulate.norm(n=100, R=10000, mu=3, sigma=5)
simulate.norm(n=1000, R=10000, mu=3, sigma=5)
simulate.norm(n=3, R=10000, mu=3, sigma=5)
simulate.gammaMax = function(n, R, alpha, beta) {
x_max = rep(NA, R)
for(i in 1:R) {
x = rgamma(n=n, shape=alpha, scale=beta)
x_max[i] = max(x)
}
hist(x_max)
cat("sim.mean = ", mean(x_max)) #, "\ttheoretical.mean =", mu,"\n") ???
cat("variance = ", var(x_max)) #, "\ttheoretical.var =", sigma^2/n,"\n") ???
return(invisible(x_max))
}
simulate.gammaMax(n=10, R=10000, alpha=2, beta=1/2) # this is chisquare df = 1
simulate.gammaMax = function(n, R, alpha, beta) {
x_max = rep(NA, R)
for(i in 1:R) {
x = rgamma(n=n, shape=alpha, scale=beta)
x_max[i] = max(x)
}
hist(x_max)
cat("sim.max = ", mean(x_max), "\n") #, "\ttheoretical.mean =", mu,"\n") ???
return(invisible(x_max))
}
simulate.gammaMax(n=10, R=10000, alpha=2, beta=1/2) # this is chisquare df = 1
simulate.gammaMax(n=10, R=10000, alpha=2, beta=1/2) # this is chisquare df = 1
simulate.gammaMax(n=10, R=10000, alpha=2, beta=1/2) # this is chisquare df = 1
simulate.gammaMax(n=10, R=10000, alpha=2, beta=1/2) # this is chisquare df = 1
