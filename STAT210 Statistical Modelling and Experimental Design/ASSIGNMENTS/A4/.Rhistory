source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/Chapter 6, 7 - Variable Screening, Transformations/Lecture_Chapter7_Example 7.3 - Diesel Interaction.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PLOTTING.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/DATA.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/Chapter 6, 7 - Variable Screening, Transformations/Lecture_Chapter7_Example 7.3 - Diesel Interaction.R', echo=TRUE)
DIESEL
interactionPlot(data=DIESEL, xFactor = "BRAND", traceFactor = "FUEL",
response="PERFORM")
interaction.plot(x.factor = BRAND, trace.factor = FUEL, response = PERFORM)
attach(DIELSEL2)
detach(DIESEL)
detach(DIESEL)
detach(DIELSEL2)
attach(DIELSEL2)
diesel.MISSING.lm <- lm(PERFORM ~ FUEL + BRAND + FUEL:BRAND, data=DIELSEL2)
anova(diesel.lm)
anova(diesel.MISSING.lm)
nrow(DIELSEL2)
summary(diesel.MISSING.lm) # see two parameters are missing, the interactions.
anova(diesel.lm)
anova(diesel.MISSING.lm)
nrow(DIESEL)
nrow(DIESEL2)
nrow(DIELSEL2)
View(DIELSEL2)
View(DIESEL)
diesel.lm
diesel.MISSING.lm
anova(lm(PERFORM ~ FUEL*BRAND, data=DIESEL))
12-6-1
lm(PERFORM ~ FUEL*BRAND, data=DIESEL)
lm(PERFORM ~ FUEL, data=DIESEL)
m1 = lm(PERFORM ~ FUEL, data=DIESEL)
m1 = lm(PERFORM ~ FUEL, data=DIESEL, x=TRUE)
m1$x
m1$contrasts
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/Chapter 6, 7 - Variable Screening, Transformations/Lecture_Chapter7_Multicollinearity_FTCCIGAR.R', echo=TRUE)
summary(cigar.lm)
pt(-0.67469, df=nrow(cigarData)-4)
pt(-0.67469, df=nrow(cigarData)-4)*2
0.507/2
anova(cigar.lm)
qt(0.025, df=nrow(cigarData)-4)
betaCI(cigar.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/Chapter 9 - Logistic Regression/Lecture_Reading9_Genotype.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/Chapter 9 - Logistic Regression/Lecture_Reading9_Genotype.R', echo=TRUE)
ratio.glm
genderData
is.factor(genderData$genotype)
predict(ratio.glm, newdata=data.frame(genotype="C"), type="response")
predict(ratio.glm, newdata=data.frame(genotype="C"), type="response", interval="confidence")
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/ASSIGNMENTS/A2/Question3_bloodflow.R', echo=TRUE)
ratio.glm
predict(ratio.glm, newdata=data.frame(genotype="C"), type="response", se.fit=TRUE)
0.4693877551-2*0.07129457295
0.4693877551+2*0.07129457295
data("diamonds")
head(diamonds)
m <- lm(price ~ carat + I(carat^2) + depth, data=diamonds)
summary(m)
vif(m)
m1 <- lm(carat ~ I(carat^2) + depth, data=diamonds)
summary(m1)$r.sq
summary(m1)
1/(1-0.9091^2)
cigar.lm
summary(cigar.lm)
1/(1-0.906959)
1/(1-0.906959^2)
m2 = lm(TAR ~ NICOTINE + WEIGHT, data=cigarData)
summary(m2)$r.sq
summary(m2)
1/(1-0.9537694)
m = matrix(c(1,1,1, 1,-1,1, 1,0,-2, -3,0,0), byrow=TRUE,nrow=4)
m#
t(m) %*% m
m2 = matrix(c(1,1,1,-3, 1,1,-2,0, 1,-1,0,0), ncol=3)
m2 #
t(m2) %*% m2
t(m2)
m2#
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/Chapter 12 - ANOVA for Experimental Design/ContrastsReading.R', echo=TRUE)
betaCI(melon.orthog.lm)
setwd("/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/Chapter 12 - ANOVA for Experimental Design")
setwd("/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/Chapter 12 - ANOVA for Experimental Design")
mangoldData <- read.table("mangold.txt", header=TRUE)
mangoldData
dungName <- function(elem){
if(elem == 1) "D1"
else if(elem == 2) "D2"
}
blockName <- function(elem){
if(elem == 1)"B1"
else if(elem == 2) "B2"
else if(elem == 3) "B3"
else if(elem == 4) "B4"
}
ammoniaName <- function(elem){ if(elem == 1) "A1" else "A2"}
saltName <- function(elem) {if(elem) == 1) "S1" else "S2"}
dungName <- function(elem){ if(elem == 1) "D1" else if(elem == 2) "D2"}
blockName <- function(elem){
if(elem == 1)"B1"
else if(elem == 2) "B2"
else if(elem == 3) "B3"
else if(elem == 4) "B4"
}
ammoniaName <- function(elem){ if(elem == 1) "A1" else "A2"}
saltName <- function(elem) {if(elem == 1) "S1" else "S2"}
sapply(mangoldData$block, blockName)
mangoldData$block <- factor(sapply(mangoldData$block, blockName))
mangoldData$dung <- factor(sapply(mangoldData$block, dungName))
mangoldData$nh4 <- factor(sapply(mangoldData$block, ammoniaName))
mangoldData$salt <- factor(sapply(mangoldData$block, saltName))
mangoldData
mangoldData <- read.table("mangold.txt", header=TRUE)
mangoldData$block <- factor(sapply(mangoldData$block, blockName))
mangoldData$dung <- factor(sapply(mangoldData$dung, dungName))
mangoldData$nh4 <- factor(sapply(mangoldData$nh4, ammoniaName))
mangoldData$salt <- factor(sapply(mangoldData$salt, saltName))
mangoldData
library(effects)
options(show.signif.stars = FALSE)
mangold.lm <- lm(yield ~ block + nh4*salt*dung, data=mangoldData)
eff.mangold <- allEffects(mangold.lm)
plot(eff.mangold)
interaction.plot(x.factor=salt, trace.factor=nh4, response=yield, data=mangoldData)
attach(mangoldData)
interaction.plot(x.factor=salt, trace.factor=nh4, response=yield)
par(mfrow=c(1,1))
interaction.plot(x.factor=salt, trace.factor=nh4, response=yield)
interaction.plot(x.factor=salt, trace.factor=nh4, response=yield)
interaction.plot(x.factor=salt, trace.factor = dung, response=yield)
interaction.plot(x.factor=nh4, trace.factor = dung, response=yield)
library(dae)
interaction.ABC.plot(response=yield, x.factor=nh4, trace.factor = salt, groups.factor = dung)
interaction.ABC.plot(response=yield, x.factor=nh4, trace.factor = salt, groups.factor = dung,
data=mangoldData)
interaction.ABC.plot(response=yield, x.factor=nh4, trace.factor = dung, groups.factor = salt,
data=mangoldData)
interaction.ABC.plot(response=yield, x.factor = nh4, trace.factor=salt, groups.factor=dung)
data=mangoldData)
interaction.ABC.plot(response=yield, x.factor = nh4, trace.factor=salt, groups.factor=dung,
data=mangoldData)
interaction.ABC.plot(response=yield, x.factor = salt, trace.factor=nh4, groups.factor=dung,
data=mangoldData)
interaction.ABC.plot(response=yield, x.factor = salt, trace.factor=dung, groups.factor=nh4,
data=mangoldData)
interaction.ABC.plot(response=yield, x.factor = salt, trace.factor=nh4, groups.factor=dung,
data=mangoldData)
summary(mangold.lm)
interaction.ABC.plot(response=yield, x.factor = dung, trace.factor=salt, groups.factor=nh4,
data=mangoldData)
interaction.ABC.plot(response=yield, x.factor = dung, trace.factor=nh4, groups.factor=salt,
data=mangoldData)
anova(mangold.lm)
mangold2.lm <- lm(yield ~ block + (nh4 + salt + dung)^2, data=mangoldData)
anova(mangold2.lm)
mangold3.lm <- lm(yield ~ block + nh4 + salt + dung + nh4:salt, data=mangoldData)
anova(mangold3.lm)
interaction.plot(response=yield, x.factor = nh4, trace.factor = salt)
eff.mangold
eff.mangold3 <- allEffects(mangold3.lm)
eff.mangold3
anova(mangold3.lm)
par(mfrow=c(2,2))
plot(mangold3.lm, which=c(1,2,3,5), cook.levels = c(0.2, 0.5, 1))
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/ASSIGNMENTS/A4/Question3.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/ASSIGNMENTS/A4/Question1.R', echo=TRUE)
interaction.ABC.plot(response=resprate, x.factor = species, trace.factor=gender,
groups.factor = temperature, data=oxygenData)
plot(eff.crab)
summary(final.lm)
anova(final.lm)
summary(complete.weight.lm)
anova(complete.cases())
anova(complete.weight.lm)
anova(supp.testDiffs.lm) # yess, all significant.
summary(supp.testDiffs.lm) #pvalues are the same for both tables since
supp.testDiffs.lm <- lm(WeightGain ~ supp12v3 + supp1v2-1, data=weightData)
summary(supp.testDiffs.lm) #pvalues are the same for both tables since
supp.testDiffs.lm <- lm(WeightGain ~ supp12v3 + supp1v2, data=weightData)
summary(supp.testDiffs.lm) #pvalues are the same for both tables since
contrastMatrix <- matrix(c(supp12v3, supp1v2), ncol=2)
contrastMatrix
contrastMatrix <- matrix(c(1,1,-2, 1-1,0), ncol=2)
contrastMatrix
contrastMatrix <- matrix(c(1,1,-2, 1,-1,0), ncol=2)
contrastMatrix
t(contrastMatrix) %*% contrastMatrix
