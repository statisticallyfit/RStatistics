sample(x=50, size=50, replace=TRUE)
sample(x=50, size=50, replace=F)
unique(sample(x=50, size=50, replace=F))
sort(unique(sample(x=50, size=50, replace=F)))
sample(1:6, size=50, replace=TRUE)
throws=sample(1:6, size=50, replace=TRUE)
sum(throws==2)
throws=sample(1:6, size=50, replace=F)
throws=sample(1:6, size=50, replace=TRUE)
throws
table(throws)
sum(table(throws))
dbinom(x=4, size=50, p = 1/2)
pgeom(6, p=0.3)
pgeom(5, p=0.3)
pgeom(7, p=0.3, lower.tail=F)
pgeom(6, p=0.3, lower.tail=F)
pgeom(5, 0.3)
pgeom(6, 0.3, lower.tail = F)
1-pgeom(6, 0.3, lower.tail = T)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PLOTTING.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/DATA.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_1_Acid/Practical1_Acid.R', echo=TRUE)
setwd("/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_1_Acid/")
library(ggplot2)
#
# setting digits options:
options(digits=3, show.signif.stars = FALSE)
## Getting data
acidData <- read.table("acid.txt", header=TRUE)
acidData
## Listing names of variables
m = print(names(acidData)); m
names(acidData)
## Listing first 3 lines
head(acidData, 3)
## Fitting Linear Model with Y = fungus, X = acid
acid.lm <- lm(fungus ~ acid, data=acidData)
summary(acid.lm)
## Anova table
anova(acid.lm)
## Plotting
nrow(acidData)
meanCI(acid.lm, x.value=15, level=0.95)
interpret.MeanCI(acid.lm, x.value=15, x.unit="mug/mL",y.unit = "mm")
setwd('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_2_Perch/')
perchData <- read.table("Perch.txt", header=TRUE)
perch.maineffects.lm <- lm(Weight ~ Length + Width, data=perchData)
summary(perch.maineffects.lm)
ggpairs(data=perchData, columns=c(3,4,2),
lower=list(continuous="smooth", params=c(colour="blue")),
diag=list(continuous="density", params=c(colour="black")),
upper = list(continuous="cor", params=c(size=10)))
anova(lm(Weight ~ Width + Length, data=perchData))
anova(lm(Weight ~ Width + Length, data=perchData))
anova(perch.maineffects.lm)
with(perchData, cor(Width, Length))
summary(perch.maineffects.lm)
par(mfrow=c(1,1))
plot(perch.maineffects.lm, which=1)
perch.interact.lm <- lm(Weight ~ Length + Width + Length:Width, data=perchData)
summary(perch.interact.lm)
plot(perch.interact.lm, which=1)
meanCI(perch.interact.lm, x.values=c(lengthVal, widthVal))
lengthVal <- 30; widthVal <- 6;
meanCI(perch.interact.lm, x.values=c(lengthVal, widthVal))
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_3_Rats/Practical_3_Rats_PolyReg.R', echo=TRUE)
betaCI(skin3.lm)
anova(skin3.lm) # seeing that after fitting the linear and quadratic term,
betaCI(skin4.lm)
anova(skin4.lm)
nrow(ratsData)
ratsData
unique(ratsData)
unique(ratsData$Conc)
length(unique(ratsData$Conc))
anova(skin5.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_4_MapleSamara/Pratical4_MapleSamara.R', echo=TRUE)
residualFitPlot(samara.interact.lm) # good scatter, constant variance
normalQQPlot(samara.interact.lm) # good straight line normality
normalityPlot(samara.interact.lm) # good straight line normality
xyp <- xyplot(Velocity ~ Load | Tree, data=samaraData,
layout=c(3,1),
panel=function(x,y){
panel.xyplot(x, y)
panel.lmline(x, y)
})
xyp
anova(samara.interact.lm)
samara.main.lm <- lm(Velocity ~ Load + Tree, data=samaraData)
anova(samara.main.lm)
anova(lm(Velocity ~ Tree + Load, data=samaraData))
anova(samara.simple.lm)
anova(samara.interact.lm, samara.main.lm, samara.simple.lm)
anova(samara.interact.lm)
nrow(samaraData)
36-1-2-2
36-1
36-5
summary(samara.interact.lm)
36-6
36-5-1
nrow(samaraData)
35-5-1
summary(samara.main.lm)
35-4
samara.simple.lm
35-2
anova(samara.interact.lm, samara.main.lm, samara.simple.lm)
anova(samara.simple.lm)
step.forward.model
step.forward.model <- step(start.model, direction="forward",
scope=list(lower=formLower, upper=formUpper))
step.forward.model
formLower <- formula( ~ 1)
formUpper <- formula( ~ Load + Tree + Load:Tree, data=samaraData)
start.model <- lm(Velocity ~ 1, data=samaraData)
step.forward.model <- step(start.model, direction="forward",
scope=list(lower=formLower, upper=formUpper))
step.forward.model
setwd("/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_5_CoralBleach/")
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_5_CoralBleach/prac5_q1_coral.R', echo=TRUE)
anova(coral.glm, test="Chisq")
ResidualDevianceTest(coral.glm) # overall good model fit since p = 0.40
exp(betaCI(coral.glm)) # the odds ratios (also called odds)
exp(cof) # this is the odds of a bleaching event
exp(betaCI(coral.glm))
exp(cof)-1
exp(betaCI(coral.glm)) -1
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PLOTTING.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_5_CoralBleach/prac5_q2_admission.R', echo=TRUE)
admitData
head(admitData)
anova(adm.glm, test="Chisq")
1 -pchisq(458.51749, df=394)
summary(adm.glm) # all coefficients (log odds or odds ratios) are significant
cof <- summary(adm.glm)$coef[,1:2]
cof
cof <- summary(adm.glm)$coef[,1]
cof
cof <- cbind(summary(adm.glm)$coef[,1])
cof
exp(cof)-1
100*(exp(cof)-1 )
betaCI(adm.glm)
100*(exp(betaCI(adm.glm))-1)
anova(adm.glm, test="Chisq")
NestedLikelihoodRatioTest(lm(admit ~ gre + gpa, data=admitData, family=binomial), adm.glm)
NestedLikelihoodRatioTest(glm(admit ~ gre + gpa, data=admitData, family=binomial), adm.glm)
adm.main.glm <- glm(admit ~ gre + gpa, data=admitData, family=binomial)
anova(adm.glm, test="Chisq")
NestedLikelihoodRatioTest(adm.main.glm, adm.glm)
anova(adm.glm, test="Chisq")
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_6_HerbicideAnova/Practical6_HerbicideAnova.R', echo=TRUE)
setwd("/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_6_HerbicideAnova")
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_6_HerbicideAnova/Practical6_HerbicideAnova.R', echo=TRUE)
cottonData
plot(CRD.eff)
effectPlot(cotton.crd.lm)
anova(cotton.crd.lm) # P-value is not significant. H0: mu_low = mu_med = mu_high
cotton.null.lm <- lm(Yield ~ 1, data=cottonData)
NestedFTest(cotton.null.lm, cotton.crd.lm)
cotton.rcb.lm <- lm(Yield ~ Location + Herbicide, data=cottonData)
RCB.eff$Location$fit
plot(RCB.eff)
effectPlot(cotton.crd.lm) # compare with this one. (same on the right)
effectPlot(cotton.rcb.lm)
RCB.eff$Location$fit
RCB.eff
with(cottonData, tapply(Yield, list=INDEX(Location, Herbicide), mean))
head(cottonData)
with(cottonData, tapply(Yield, INDEX=list(Location, Herbicide), mean))
with(cottonData, tapply(Yield, INDEX=list(Location), mean))
with(cottonData, tapply(Yield, INDEX=list(Location), mean))
RCB.eff
effectPlot(cotton.crd.lm) # compare with this one. (same on the right)
effectPlot(cotton.rcb.lm)
anova(cotton.rcb.lm) # now there is significant difference in mean yield
summary(cotton.rcb.lm)
cottonData <- data.frame(Location=c(rep("1",3), rep("2",3), rep("3",3), rep("4",3)),
Herbicide=rep(c("H1","H2","H3"), 4),
Yield=c(12.7,15.2,12.3,13,16.2,9.4,15.6,13.7,9.1,7.1,7.8,4.7),
stringsAsFactors = TRUE)
cottonData$Herbicide <- relevel(cottonData$Herbicide, ref="low")
cottonData$Herbicide <- relevel(cottonData$Herbicide, ref="H1")
cotton.crd.lm <- lm(Yield ~ Herbicide, data=cottonData)
CRD.eff <- allEffects(cotton.crd.lm)
plot(CRD.eff)
effectPlot(cotton.crd.lm)
anova(cotton.crd.lm) # P-value is not significant. H0: mu_low = mu_med = mu_high
nrow(cottonData)
12-1
cotton.rcb.lm <- lm(Yield ~ Location + Herbicide, data=cottonData)
RCB.eff <- allEffects(cotton.rcb.lm)
RCB.eff
with(cottonData, tapply(Yield, INDEX=list(Location), mean))
with(cottonData, tapply(Yield, INDEX=list(Location), mean))
plot(RCB.eff)
effectPlot(cotton.rcb.lm)
effectPlot(cotton.crd.lm) # compare with this one. (same on the right)
RCB.eff
anova(cotton.rcb.lm) # now there is significant difference in mean yield
summary(cotton.rcb.lm)
cottonData$Herbicide <- relevel(cottonData$Herbicide, ref="H2")
cotton.rcb2.lm <- lm(Yield ~ Location + Herbicide, data=cottonData)
summary(cotton.rcb2.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PLOTTING.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_7_RatsPlants_Contrasts/Question1_RatContrasts.R', echo=TRUE)
nrow(ratData)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_7_RatsPlants_Contrasts/Question1_RatContrasts.R', echo=TRUE)
setwd("/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_7_RatsPlants_Contrasts")
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_7_RatsPlants_Contrasts/Question1_RatContrasts.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/DATA.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_7_RatsPlants_Contrasts/Question1_RatContrasts.R', echo=TRUE)
nrow(ratData)
levels(ratData$Treatment)
anova(ratcalcium.lm)
61-3
anova(lm(Weight ~ Treatment, data=ratData))
testContrastsOrthogonal(ratcalcium.lm)
ratcalcium.lm <- lm(Weight ~ DOCvWKY + DOCCAvWKYCA + CAvNoCa, data=ratData)
getContrastMatrix(ratcalcium.lm)
anova(ratcalcium.lm)
ratcalcium.lm <- lm(Weight ~ DOCvWKY + CAvNoCa + DOCCAvWKYCA, data=ratData)
anova(ratcalcium.lm)
getContrastMatrix(ratcalcium.lm)
CAvNoCa <- C(ratData$Treatment, c(2,-2,2,-2), how.many = 1)
ratcalcium.lm <- lm(Weight ~ DOCvWKY + CAvNoCa + DOCCAvWKYCA, data=ratData)
getContrastMatrix(ratcalcium.lm)
testContrastsOrthogonal(ratcalcium.lm)
DOCvWKY <- C(ratData$Treatment, c(1,0,-1,0), 1)
DOCCAvWKYCA <- C(ratData$Treatment, c(0,1,0,-1),1)
ratcalcium.lm <- lm(Weight ~ DOCvWKY + CAvNoCa + DOCCAvWKYCA, data=ratData)
getContrastMatrix(ratcalcium.lm)
testContrastsOrthogonal(ratcalcium.lm)
anova(ratcalcium.lm)
anova(ratcalcium.lm)
betaCI(ratcalcium.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PRACTICALS/Practical_7_RatsPlants_Contrasts/Question2_PlantGrowthContrasts.R', echo=TRUE)
summary(plant.factorial.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/Chapter 12 - ANOVA for Experimental Design/ContrastsReading.R', echo=TRUE)
summary(melon.orthog.lm)
anova(melon.orthog.lm)
