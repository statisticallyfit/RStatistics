is.factor(honeyData$TREATMENT)
load("data/Exercises and Examples/NAMEGAME.Rdata")
View(NAMEGAME)
subset(NAMEGAME, GROUP==1)
namegameData <- removeWhitespace(NAMEGAME)
is.factor(namegameData$GROUP)
namegameData <- removeWhitespace(NAMEGAME)
namegameData <- removeWhitespace(NAMEGAME, colsToFix = "GROUP")
is.factor(namegameData$GROUP)
namegameData
NAMEGAME
name.lm <- lm(RECALL ~ GROUP, data=namegameData) # p = 3 treatments
summary(name.lm)
anova(name.lm)
drinkers.lm <- lm(SCORE ~ GROUP, data=DRINKERS)
drinkers.lm
summary(drinkers.lm)
anova(drinkers.lm)
0.95064545+1.23172727
sst <- totalAR^2/nAR + totalAC^2/nAC + totalA^2/nA + totalP^2/nP - CM
sst
sse = SS_total - sst; sse
Fstat = (sst/(4-1))/(sse/(n-4)); Fstat
1 - pf(Fstat, df1=4-1, df2=n-4)
anova(drinkers.lm)
SSE(drinkers.lm)
SST(drinkers.lm)
SSyy(drinkers.lm)
names(drinkers.lm$model)
xnam <- "GROUP"
drinkers.lm$model[[xnam]]
mean(drinkers.lm$model[[xnam]])
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
SSyy(drinkers.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
SSyy(drinkers.lm)
SST(drinkers.lm)
SSE(drinkers.lm)
namegameData
nSimple = length(subset(namegameData, GROUP=="1"))
nSimple
subset(namegameData, GROUP=="1")
nSimple = nrow(subset(namegameData, GROUP=="1"))
nSimple
nElab = nrow(subset(namegameData, GROUP=="2"))
nElaborate = nrow(subset(namegameData, GROUP=="2"))
nPairwise = nrow(subset(namegameData, GROUP=="3"))
namegameData$GROUP = c(rep("simple", nSimple), rep("elaborate", nElaborate),
rep("pairwise", nPairwise))
namegameData
is.factor(namegameData$GROUP)
namegameData$GROUP <- factor(namegameData$GROUP)
name.lm <- lm(RECALL ~ GROUP, data=namegameData) # p = 3 treatments
summary(name.lm)
View(NAMEGAME)
View(namegameData)
SSyy(name.lm)
anova(name.lm)
SST(name.lm)
SSE(name.lm)
SST(drinkers.lm)
anova(drinkers.lm)
SSyy(drinkers.lm)
SSE(name.lm)
SST(namegameData)
SSE(name.lm)
SST(name.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
SSyy(name.lm)
SST(name.lm)
SSE(name.lm)
anova(name.lm)
grandmean = mean(namegameData$RECALL)
meanSimple <- sum(subset(namegameData, GROUP == "simple")$RECALL)
meanSimple
meanSimple <- mean(subset(namegameData, GROUP == "simple")$RECALL)
meanElaborate <- mean(subset(namegameData, GROUP == "elaborate")$RECALL)
meanPairwise <- mean(subset(namegameData, GROUP == "pairwise")$RECALL)
grandmean <- mean(namegameData$RECALL)
grandmean
sb = sum(nSimple*(meanSimple - grandmean)^2 +
nElaborate*(meanElaborate - grandmean)^2 +
nPairwise*(meanPairwise - grandmean)^2)
sb
SST(name.lm)
name.lm
names(name.lm$model)
load("data/Exercises and Examples/COSTENG.Rdata")
COSTENG$ENGINEER <- factor(COSTENG$ENGINEER)
COSTENG$JOB <- factor(COSTENG$JOB)
engjob.lm <- lm(COST ~ ENGINEER + JOB, data=COSTENG)
summary(engjob.lm)
anova(engjob.lm)
n <- nrow(COSTENG)
CM = sum(COSTENG$COST)^2/n; CM
SS_total = SSyy(engjob.lm);
SS_total
sum(COSTENG$COST^2)-CM
sst = SST(engjob.lm)
sst = SST(engjob.lm); sst
anova(engjob.lm)
0.2600000+6.7633333
sum(COSTENG$COST)^2/nrow(COSTENG)
SS_total
length(COSTENG$COST)
CM = sum(COSTENG$COST)^2/n; CM
table(COSTENG$JOB, COSTENG$ENGINEER)
costs <- COSTENG
n#
SS_total
subset(COSTENG, ENGINEER=="1")
meanE1 <- mean(subset(COSTENG, ENGINEER=="1"))
meanE1 <- mean(subset(COSTENG, ENGINEER=="1")$COST)
meanE1
T1 <- sum(subset(COSTENG, ENGINEER=="1")$COST)^2
T1
T1/4
T1 <- sum(subset(COSTENG, ENGINEER=="2")$COST)^2
T1 <- sum(subset(COSTENG, ENGINEER=="1")$COST)^2
T2 <- sum(subset(COSTENG, ENGINEER=="2")$COST)^2
T3 <- sum(subset(COSTENG, ENGINEER=="3")$COST)^2
sst = T1/4 + T2/4 + T3/4;sst
sst = T1/4 + T2/4 + T3/4 - CM; sst#
B1 <- sum(subset(COSTENG, JOB == "1")$COST)
B1
B2 <- sum(subset(COSTENG, JOB == "2")$COST)
B3 <- sum(subset(COSTENG, JOB == "3")$COST)
B4 <- sum(subset(COSTENG, JOB == "4")$COST)
ssb = B1^2/3 + B2^2/3 + B3^2/3 + B4^2/3
ssb#
ssb = B1^2/3 + B2^2/3 + B3^2/3 + B4^2/3 - CM; ssb#
anova(engjob.lm)
sst#
sse#
sse = SS_total - sst - ssb; sse;
sst = T1^2/4 + T2^2/4 + T3^2/4 - CM; sst
T1 <- sum(subset(COSTENG, ENGINEER=="1")$COST)
T2 <- sum(subset(COSTENG, ENGINEER=="2")$COST)
T3 <- sum(subset(COSTENG, ENGINEER=="3")$COST)
sst = T1^2/4 + T2^2/4 + T3^2/4 - CM; sst
ssb = B1^2/3 + B2^2/3 + B3^2/3 + B4^2/3 - CM; ssb
sse = SS_total - sst - ssb; sse
# same as results here:
anova(engjob.lm)
Fstat.treat = (sst/(p-1))/(sse/(n-p-b+1)); Fstat.treat
b = 4; # num blocks = 4
p = 3; # num treatments = 3
Fstat.treat = (sst/(p-1))/(sse/(n-p-b+1)); Fstat.treat
Fstat.block = (ssb/(b-1))/(sse/(n-p+b+1)); Fstat.block
b
Fstat.block = (ssb/(b-1))/(sse/(n-p-b+1)); Fstat.block
View(ACCHW)
nrow(subset(ACCHW, ASSIST=="FULL"))
subset(ACCHW, ASSIST=="FULL")
nrow(subset(ACCHW, ASSIST=="CHECK"))
nrow(subset(ACCHW, ASSIST=="FULL"))
20*20*25
20+20+25
75-56+1
nrow(subset(ACCHW, ASSIST=="NO"))
30+25+20
COSTENG
View(HONEYCOUGH)
View(COSTENG)
nrow(subset(honeyData, TREATMENT=="h"))
nrow(subset(honeyData, TREATMENT=="H"))
nrow(subset(honeyData, TREATMENT=="DM"))
nrow(subset(honeyData, TREATMENT=="C"))
35+33+37
nrow(honeyData)
View(DRINKERS)
nAR; nAC; nA; nP#
View(NAMEGAME)
nSimple; nElaborate; nPairwise
50+42+47
load("data/Exercises and Examples/TILLRATIO.Rdata")
View(TILLRATIO)
unique(TILLRATIO$BOREHOLE)
nrow(subset(TILLRATIO, BOREHOLE == "UMRB-1"))
nrow(subset(TILLRATIO, BOREHOLE == "UMRB-2"))
nrow(subset(TILLRATIO, BOREHOLE == "UMRB-3"))
nrow(subset(TILLRATIO, BOREHOLE == "SWRA"))
nrow(subset(TILLRATIO, BOREHOLE == "SD"))
View(ACCHW)
55-31+1+30+75-56+1
load("data/Exercises and Examples/BOXING.Rdata")
View(BOXING)
1 - pf(4.0569, df1=3, df2=15)
1 - pf(6.6916, df1=5, df2=15)
load("data/Exercises and Examples/RAWMATERIAL.Rdata")
View(RAWMATERIAL)
subset(RAWMATERIAL, RATIO=="0.5")
RAWMATERIAL$RATIO <- factor(RAWMATERIAL$RATIO)
RAWMATERIAL$SUPPLY <- factor(RAWMATERIAL$SUPPLY)
RAWMATERIAL$SUPPLY <- relevel(RAWMATERIAL$SUPPLY, "21")
levels(RAWMATERIAL$SUPPLY)
RAWMATERIAL$RATIO <- relevel(RAWMATERIAL$RATIO, "2")
levels(RAWMATERIAL$RATIO)
# now with this releveling, the answer summary is the same as textbook.
raw.lm <- lm(PROFIT ~ SUPPLY + RATIO + SUPPLY:RATIO, data=RAWMATERIAL)
summary(raw.lm)
anova(raw.lm)
View(RAWMATERIAL)
n = nrow(RAWMATERIAL)
CM = sum(RAWMATERIAL$PROFIT)^2/n; CM
SS_total = sum(RAWMATERIAL$PROFIT^2) - CM; SS_total
SSyy(raw.lm)
A1 = sum(subset(RAWMATERIAL, RATIO == "0.5")$PROFIT)
A1 = sum(subset(RAWMATERIAL, RATIO == "0.5")$PROFIT)
A2 = sum(subset(RAWMATERIAL, RATIO == "1")$PROFIT)
A3 = sum(subset(RAWMATERIAL, RATIO == "2")$PROFIT)
b = length(unique(RAWMATERIAL$SUPPLY)) # num levels of factor B = supply
b
a = length(unique(RAWMATERIAL$RATIO))
r = n / (a*b); r
ss_a = (A1^2 + A2^2 + A3^2)/(b*r); ss_a
B1 = sum(subset(RAWMATERIAL, SUPPLY == "15")$PROFIT)
B2 = sum(subset(RAWMATERIAL, SUPPLY == "18")$PROFIT)
B3 = sum(subset(RAWMATERIAL, SUPPLY == "21")$PROFIT)
ss_a = (A1^2 + A2^2 + A3^2)/(b*r) - CM; ss_a
ss_b = (B1^2 + B2^2 + B3^2)/(a*r) - CM; ss_b
ss_ab = sum(RAWMATERIAL$PROFIT^2)/r - ss_a - ss_b - CM; ss_ab
subset(RAWMATERIAL, RATIO=="0.5", SUPPLY=="15")
subset(RAWMATERIAL, RATIO=="0.5" & SUPPLY=="15")
AB_0.5_15 = sum(subset(RAWMATERIAL, RATIO=="0.5" & SUPPLY=="15"))
AB_0.5_18 = sum(subset(RAWMATERIAL, RATIO=="0.5" & SUPPLY=="18"))
AB_0.5_15 = sum(subset(RAWMATERIAL, RATIO=="0.5" & SUPPLY=="15"))
AB_0.5_15 = sum(subset(RAWMATERIAL, RATIO=="0.5" & SUPPLY=="15")$PROFIT)
AB_0.5_18 = sum(subset(RAWMATERIAL, RATIO=="0.5" & SUPPLY=="18")$PROFIT)
AB_0.5_21 = sum(subset(RAWMATERIAL, RATIO=="0.5" & SUPPLY=="21")$PROFIT)
AB_1_15 = sum(subset(RAWMATERIAL, RATIO=="1" & SUPPLY=="15")$PROFIT)
AB_1_18 = sum(subset(RAWMATERIAL, RATIO=="1" & SUPPLY=="18")$PROFIT)
AB_1_21 = sum(subset(RAWMATERIAL, RATIO=="1" & SUPPLY=="21")$PROFIT)
AB_2_15 = sum(subset(RAWMATERIAL, RATIO=="2" & SUPPLY=="15")$PROFIT)
AB_2_18 = sum(subset(RAWMATERIAL, RATIO=="2" & SUPPLY=="18")$PROFIT)
AB_2_21 = sum(subset(RAWMATERIAL, RATIO=="2" & SUPPLY=="21")$PROFIT)
cs <- c(AB_0.5_15, AB_0.5_18, AB_0.5_21, AB_1_15, AB_1_18, AB_1_21,
AB_2_15, AB_2_18, AB_2_21)
ss_ab = (1/r)*(sum(cs^2)) - ss_a - ss_b - CM; ss_ab
anova(raw.lm)
ss_a
ss_b
ss_ab
sse = SS_total - ss_a - ss_b - ss_ab; sse
sse
rawCategData <- RAWMATERIAL
rawCategData$RATIO <- factor(rawCategData$RATIO)
rawCategData$SUPPLY <- factor(rawCategData$SUPPLY)
rawCategData$SUPPLY <- relevel(rawCategData$SUPPLY, "21")
levels(rawCategData$SUPPLY)
rawCategData$RATIO <- relevel(rawCategData$RATIO, "2")
levels(rawCategData$RATIO)
# preparing quantitative data
rawQuantData <- RAWMATERIAL
raw.categ.lm <- lm(PROFIT ~ RATIO * SUPPLY, data=rawCategData)
summary(raw.categ.lm)
anova(raw.categ.lm)
raw.quant.lm <- lm(PROFIT ~ SUPPLY + I(SUPPLY^2) + RATIO + I(RATIO^2) +
RATIO:SUPPLY + SUPPLY:I(RATIO^2) + RATIO:I(SUPPLY^2) +
I(RATIO^2):I(SUPPLY^2), data=rawQuantData)
summary(raw.quant.lm)
raw.quant.lm <- lm(PROFIT ~ SUPPLY + I(SUPPLY^2) + RATIO + I(RATIO^2) +
RATIO:SUPPLY + SUPPLY:I(RATIO^2) + RATIO:I(SUPPLY^2) +
I(RATIO^2):I(SUPPLY^2), data=rawQuantData)
rawQuantData <- RAWMATERIAL
load("data/Exercises and Examples/RAWMATERIAL.Rdata")
rawCategData <- RAWMATERIAL
rawCategData$RATIO <- factor(rawCategData$RATIO)
rawCategData$SUPPLY <- factor(rawCategData$SUPPLY)
rawCategData$SUPPLY <- relevel(rawCategData$SUPPLY, "21")
levels(rawCategData$SUPPLY)
rawCategData$RATIO <- relevel(rawCategData$RATIO, "2")
levels(rawCategData$RATIO)
rawQuantData <- RAWMATERIAL
raw.categ.lm <- lm(PROFIT ~ RATIO * SUPPLY, data=rawCategData)
summary(raw.categ.lm)
anova(raw.categ.lm)
# raw material model with QUANT predictors
raw.quant.lm <- lm(PROFIT ~ SUPPLY + I(SUPPLY^2) + RATIO + I(RATIO^2) +
RATIO:SUPPLY + SUPPLY:I(RATIO^2) + RATIO:I(SUPPLY^2) +
I(RATIO^2):I(SUPPLY^2), data=rawQuantData)
summary(raw.quant.lm)
anova(raw.quant.lm)
raw.quant.null.lm <- lm(PROFIT ~ 1, data=rawQuantData)
anova(raw.quant.null.lm, raw.quant.lm)
NestedFTest(raw.quant.null.lm, raw.quant.lm) # same as for categ
anova(raw.quant.null.lm, raw.quant.lm)
raw.quant.main.lm <- lm(PROFIT ~ SUPPLY + I(SUPPLY^2) + RATIO + I(RATIO^2),
data=rawQuantData)
anova(raw.quant.main.lm, raw.quant.lm)
raw.quant.nohigher.lm <- lm(PROFIT ~ SUPPLY * RATIO, data=rawQuantData)
anova(raw.quant.nohigher.lm, raw.quant.lm)
anova(raw.quant.null.lm, raw.quant.lm)
raw.categ.null.lm <- lm(PROFIT ~ 1, data=rawCategData)
anova(raw.categ.null.lm, raw.categ.lm)
anova(raw.quant.null.lm, raw.quant.lm)
NestedFTest(raw.quant.null.lm, raw.quant.lm) # same as for categ
raw.categ.main.lm <- lm(PROFIT ~ SUPPLY + RATIO, data=rawCategData)
anova(raw.categ.main.lm, raw.categ.lm)
anova(raw.quant.main.lm, raw.quant.lm)
raw.quant.nohigher.lm <- lm(PROFIT ~ SUPPLY * RATIO, data=rawQuantData)
anova(raw.quant.nohigher.lm, raw.quant.lm)
anova(raw.categ.main.lm, raw.categ.lm)
anova(raw.quant.null.lm, raw.quant.lm)
anova(raw.quant.nohigher.lm, raw.quant.lm)
NestedFTest(raw.quant.nohigher.lm, raw.quant.lm)
raw.quant.lm
raw.quant.lm
reduced.lm <- lm(PROFIT ~ SUPPLY + I(SUPPLY^2) + RATIO + I(RATIO^2) +
RATIO:SUPPLY, data=rawQuantData)
NestedFTest(reduced.lm, raw.quant.lm)
nf = formula(raw.quant.lm)
nf = formula(reduced.lm)
na = formula(raw.quant.lm)
nf#
na#
nf([[2]])
nf[[2]]
nf[[1]]
nf[3]
cat(paste(nf[[2]], nf[[1]], nf[3]))
cat(paste(na[[2]], na[[1]], na[3]))
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
NestedFTest(reduced.lm, raw.quant.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
NestedFTest(reduced.lm, raw.quant.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
NestedFTest(reduced.lm, raw.quant.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
NestedFTest(reduced.lm, raw.quant.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
NestedFTest(reduced.lm, raw.quant.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
NestedFTest(reduced.lm, raw.quant.lm)
df = NestedFTest(reduced.lm, raw.quant.lm)
df$RecommendedModel
df$Test
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
df = NestedFTest(reduced.lm, raw.quant.lm)
df$RecommendedModel
df$RecommendedName
predict(reduced.lm, type="interval")
predict(reduced.lm, interval="confidence", newdata=data.frame(SUPPLY=17, RATIO=1))
anova(raw.quant.lm)
an <- anova(raw.quant.lm)
an$`Mean Sq`
sum(an$`Mean Sq`)
SSyy(raw.quant.lm)
1-pf(1.25, df1=2, df2=18)
1 - pf(25, df1=2, df2=18)
1 - pf(297.444, df1=1, df2=18)
anova(raw.categ.main.lm, raw.categ.lm)
anova(raw.categ.null.lm, raw.categ.lm)
anova(raw.categ.lm)
load("data/Exercises and Examples/TINLEAD.Rdata")
options(digits=10, show.signif.stars = FALSE)
View(TINLEAD)
is.factor(TINLEAD$ANTIMONY)
TINLEAD$ANTIMONY <- factor(TINLEAD$ANTIMONY)
is.factor(TINLEAD$METHOD)
tin.lm <- lm(STRENGTH ~ ANTIMONY + METHOD, data=TINLEAD)
summary(tin.lm)
anova(tin.lm)
tin.lm <- lm(STRENGTH ~ ANTIMONY * METHOD, data=TINLEAD)
summary(tin.lm)
anova(tin.lm)
tin.lm2 <- lm(STRENGTH ~ METHOD * ANTIMONY, data=TINLEAD)
anova(tin.lm2)
summary(tin.lm2)
summary(tin.lm)
cof1 <- coef(summary(tin.lm))[,1]
cof2 <- coef(summary(tin.lm2))[,1]
cbind(cof1,cof2)
anova(tin.lm)
tinQuantData <- TINLEAD
tinQuantData$ANTIMONY <- as.numeric(tinQuantData$ANTIMONY)
tin.quant.lm <- lm(STRENGTH ~ ANTIMONY * METHOD, data=tinQuantData)
summary(tin.quant.lm)
anova(tin.quant.lm)
cbind(cof1, cof2)
summary(tin.quant.lm)
tin.complete.lm <- lm(STRENGTH ~ ANTIMONY + I(ANTIMONY^2) + METHOD +
ANTIMONY:METHOD + I(ANTIMONY^2):METHOD,
data=tinQuantData)
summary(tin.complete.lm)
NestedFTest(tin.quant.lm, tin.complete.lm)
tin.quant.lm <- lm(STRENGTH ~ ANTIMONY + METHOD + ANTIMONY:METHOD, data=tinQuantData)
NestedFTest(tin.quant.lm, tin.complete.lm)
anova(tin.quant.lm, tin.complete.lm)
NestedFTest(tin.quant.lm, tin.complete.lm)
df = NestedFTest(tin.quant.lm, tin.complete.lm)
df$RecommendedName
load("data/Exercises and Examples/EGGS2.Rdata")
options(digits=10, show.signif.stars = FALSE)
View(EGGS2)
egg.lm <- lm(OVERRUN ~ HOUSING + WT, data =EGGS2)
egg.lm <- lm(OVERRUN ~ HOUSING + WT + HOUSING:WT, data =EGGS2)
summary(egg.lm)
anova(egg.lm)
basketballData <- matrix(c(1.77, 2.73, 5.38, 4.34, 7.16, 7.52, 7.59, 4.92),
byrow = TRUE, nrow=4)
basketballData <- data.frame(basketballData)
basketballData
colnames(basketballData) <- c("Male", "Female")
rownames(basketballData) <- c("Minimal", "Moderate", "Substantial", "Extreme")
basketballData
basketTable <- matrix(c(1.77, 2.73, 5.38, 4.34, 7.16, 7.52, 7.59, 4.92),
byrow = TRUE, nrow=4)
basketTable <- data.frame(basketTable)
colnames(basketTable) <- c("Male", "Female")
rownames(basketTable) <- c("Minimal", "Moderate", "Substantial", "Extreme")
basketTable
interaction.plot(x.factor=)
basketData <- data.frame(GENDER=c(rep("Male", 4), rep("Female", 4)),
SUSPENSE=c(rep(c("Minimal", "Moderate", "Substantial", "Extreme"),2)))
basketData
basketData <- data.frame(GENDER=c(rep("Male", 4), rep("Female", 4)),
SUSPENSE=c(rep(c("Minimal", "Moderate", "Substantial", "Extreme"),2)),
RATING=c(1.77, 5.38, 7.16, 7.59, 2.73, 4.34, 7.52, 4.92))
basketData
interaction.plot(x.factor=SUSPENSE, trace.factor = GENDER, response=RATING)
with(basketData, interaction.plot(x.factor=SUSPENSE, trace.factor = GENDER, response=RATING))
basket.lm <- lm(RATING ~ GENDER*SUSPENSE, data=basketData)
summary(basket.lm)
is.factor(basketData$GENDER)
is.factor(basketData$RATING)
EGG2
View(EGGS2)
basketData <- data.frame(GENDER=c(rep("Male", 4), rep("Female", 4)),
SUSPENSE=c(rep(c("Minimal", "Moderate", "Substantial", "Extreme"),2)),
RATING=c(1.77, 5.38, 7.16, 7.59, 2.73, 4.34, 7.52, 4.92),
stringsAsFactors = TRUE)
basketData
with(basketData, interaction.plot(x.factor=SUSPENSE, trace.factor = GENDER, response=RATING))
basket.lm <- lm(RATING ~ GENDER*SUSPENSE, data=basketData)
summary(basket.lm)
load("data/Exercises and Examples/LYRICS.Rdata")
options(digits=10, show.signif.stars = FALSE)
View(LYRICS)
lyrics.lm <- lm(SCORE ~ SONG*POOL, data=LYRICS)
summary(lyrics.lm)
anova(lyrics.lm)
anova(lm(SCORE ~ POOL*SONG, data=LYRICS))
load("data/Exercises and Examples/PRACEXAM.Rdata")
View(PRACEXAM)
exam.lm <- lm(RATING ~ PREP*STANDING, data=PRACEXAM)
anova(exam.lm)
load("data/Exercises and Examples/WATERVAPOR.Rdata")
View(WATERVAPOR)
is.factor(WATERVAPOR$TEMP)
WATERVAPOR$TEMP <- factor(WATERVAPOR$TEMP)
WATERVAPOR$MOLE <- factor(WATERVAPOR$MOLE)
oxydiff.lm <- lm(OXYDIFF ~ MOLE*TEMP, data=WATERVAPOR)
summary(oxydiff.lm)
WATERVAPOR <- removeWhitespace(WATERVAPOR)
WATERVAPOR <- removeWhitespace(WATERVAPOR, colsToFix = c("TEMP", "MOLE"))
Q
data = WATERVAPOR
colsToFix = c("TEMP", "MOLE")
n <- ncol(data) # for rearranging later
colsToAdd <- names(data)[(names(data) != colsToFix)]
colsToAdd
newCol.df <- data.frame(unlist(lapply(data[,colsToFix], trimws)),
stringsAsFactors = TRUE)
newCol.df
df <- data.frame(cbind(newCol.df, data[,colsToAdd]))
df
df <- setNames(df, nm=c(colsToFix, colsToAdd))
colsToFix
colsToAdd
load("data/Exercises and Examples/WATERVAPOR.Rdata")
oxydiff.lm <- lm(OXYDIFF ~ MOLE*TEMP, data=WATERVAPOR)
summary(oxydiff.lm)
anova()
anova(oxydiff.lm)
interaction.plot(x.factor = TEMP, trace.factor = MOLE, response=OXYDIFF)
View(WATERVAPOR)
with(WATERVAPOR,
interaction.plot(x.factor = TEMP, trace.factor = MOLE, response=OXYDIFF))
ggplot(data=WATERVAPOR, aes(x=TEMP, y=OXYDIFF)) + geom_point(shape=19, size=3)
library(ggplot2)
ggplot(data=WATERVAPOR, aes(x=TEMP, y=OXYDIFF)) + geom_point(shape=19, size=3)
ggplot(data=WATERVAPOR, aes(x=MOLE, y=OXYDIFF)) + geom_point(shape=19, size=3)
predict(oxydiff.lm, newdata=data.frame(TEMP=1300, MOLE=0.017), interval="conf")
predict(oxydiff.lm, newdata=data.frame(TEMP=1300, MOLE=0.017), interval="pred")
load("data/Exercises and Examples/TRANSISTOR1.Rdata")
View(TRANSISTOR1)
TRANSISTOR1$SHIFT <- factor(TRANSISTOR1$SHIFT)
TRANSISTOR1$DAYS <- factor(TRANSISTOR1$DAYS)
TRANSISTOR1$BREAKS <- factor(TRANSISTOR1$BREAKS)
transist.3way.lm <- lm(PRODUCT ~ SHIFT*DAYS*BREAKS, data=TRANSISTOR1)
summary(transist.3way.lm)
anova(transist.3way.lm)
an <- anova(transist.3way.lm)
sum(an$`Sum Sq`)
transist.null.lm <- lm(PRODUCT ~ 1, data=TRANSISTOR1)
anova(transist.null.lm, transist.3way.lm)
NestedFTest(transist.null.lm, transist.3way.lm)
anova(transist.null.lm, transist.3way.lm)
load("data/Exercises and Examples/RODMOLD.Rdata")
View(RODMOLD)
RODMOLD$Batch <- factor(RODMOLD$Batch)
rodmold.lm <- lm(ExtRate ~ Temperature*Pressure*Batch, data=RODMOLD)
summary(rodmold.lm)
is.numeric(RODMOLD$Temperature)
is.numeric(RODMOLD$Pressure)
is.numeric(RODMOLD$ExtRate)
rodmold.lm <- lm(ExtRate ~ Pressure + Temperature + Pressure*Temperature +
Batch, data=RODMOLD)
summary(rodmold.lm)
anova(rodmold.lm)
