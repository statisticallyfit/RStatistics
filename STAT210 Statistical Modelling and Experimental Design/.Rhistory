e <- 1 + EeX
simE[i] = e
# find E[1 / (1+x^2)]
EhX <- (1/n) * sum(1 / (1 + us^2))
# hx = arctan(1) = pi/4
pie <- EhX * 4
simPi[i] <- pie
}
df <- data.frame(simE=simE, simPi=simPi)
df.melt <- melt(df)
df.melt
x <- data.frame(v1=rnorm(100),v2=rnorm(100,1,1),v3=rnorm(100,0,2))
m <- melt(x)
head(m)
m <- melt(x, id="")
df <- data.frame(simE=simE, simPi=simPi)
df.melt <- melt(df)
ggplot(df, aes(x=value, fill=variable)) + geom_density(alpha=0.2)
ggplot(df.melt, aes(x=value, fill=variable)) + geom_density(alpha=0.2)
ggplot(df.melt, aes(x=value, colour=variable)) + geom_density(size=1)
ggplot(df.melt, aes(x=value, colour=variable)) + geom_density(size=1)
mean(simPi)
mean(simE)
x <- seq(0, 10, by=0.01)
gamma1 <- dgamma(x=x, shape=2, scale=1)
gamma2 <- dgamma(x, shape=3, scale=1)
gamma3 <- dgamma(x, shape=4, scale1)
gamma3 <- dgamma(x, shape=4, scale=1)
gsList <- list(gamma1, gamma2, gamma3)
plotMultipleContinuousDist(x, gsList)
paste(alpha)
expression(paste(alpha))
leg.txt <- c(expression(paste("Gamma","(",alpha, "=","2",",",beta,"=",1,")")),
expression(paste("Gamma","(",alpha, "=","3",",",beta,"=",1,")")),
expression(paste("Gamma","(",alpha, "=","4",",",beta,"=",1,")")))
plot(x, gamma1, type="l", ylim=c(0,0.4), ylab="Density", main="Gamma Densities",las =1)
lins(x, gamma2, col=2)
lines(x, gamma2, col=2)
lines(x, gamma3, col=3)
legend(x=5.5, y=0.3, legend=leg.txt, fill=c(1,2,3))
randGamma <- rgamma(1000, shape=2, scale=3) # alpha=2, beta=3
mean(randGamma)
var(randGamma) # V(X) = a*b^2 = 2*9=18
qnorm(0.20, mean=0, sd=1)
qnorm(0.10, mean=0, sd=1)
pnorm(-1.3)
1.281552-0.8416212
-15/0.4399308
1.281552/0.8416212
20*1.281552/0.8416212-35
-4.545634/1.522718
qnorm(0.10, mean=0, sd=1, lower.tail=F)
qnorm(1 - 0.10, mean=0, sd=1) # another way
qnorm(0.20, mean=0, sd=1)
z0 <- qnorm(0.20, mean=0, sd=1)
z1 <- qnorm(0.10, mean=0, sd=1, lower.tail=F)
z0 <- qnorm(0.20, mean=0, sd=1); z0
z1 <- qnorm(0.10, mean=0, sd=1, lower.tail=F); z1
qexp(p=0.25, rate=1/40)
pexp(2, rate=9/4, lower.tail=F)
1 - pexp(2, rate=9/4)
ppois(2, lambda=9/4, lower.tail=F)
1 - ppois(2, lambda=9/4)
beta = 40
qexp(p=0.25, rate=1/beta)
pexp(90, rate=1/beta, lower.tail=F)
diff(pexp(c(10,20), rate=1/beta)) / pexp(10, rate=1/beta, lower.tail=F)
pexp(10, rate=1/beta)
pexp(10, rate=1/beta)
pbinom(0, size=5, p=pexp(10, rate=1/beta))
pbinom(0, size=5, p=pexp(10, rate=1/beta), lower.tail=FALSE)
p = pexp(10, rate=1/beta)
pbinom(0, size=5, p=p, lower.tail=FALSE)
1 - dbinom(0, size=5, p=p)
p = pexp(10, rate=1/beta, lower.tail=FALSE)
pbinom(0, size=5, p=p, lower.tail=FALSE)
1 - dbinom(0, size=5, p=p)
p = pexp(90, rate=1/beta, lower.tail=FALSE)
pbinom(0, size=5, p=p, lower.tail=FALSE)
1 - dbinom(0, size=5, p=p)
z0 <- qnorm(0.20, mean=0, sd=1); z0
z1 <- qnorm(0.10, mean=0, sd=1, lower.tail=F); z1
qnorm(1 - 0.10, mean=0, sd=1) # another way
pgamma(30000,shape=20,scale=1000,lower.tail=F)
integrate(function(x){(1/(1000^20)*gamma(20)) * x^(20-1) *exp(-x/1000) }, lower=30000, upper=Inf)
pgamma(30,000, shape=20, scale=1000, lower.tail=F) #
pgamma(30000, shape=20, scale=1000, lower.tail=F) #
gamma(2)
gamma(4)
gamma(5)
integrate(function(x){(1/(1000^20 * gamma(20))) * x^(20-1) *exp(-x/1000) }, lower=30000, upper=Inf)
gamma.density <- function(x){(1/(1000^20 * gamma(20))) * x^(20-1) *exp(-x/1000) }
integrate(gamma.density, lower=30000, upper=Inf)
pgamma(30000, shape=20, scale=1000, lower.tail=FALSE)
gamma(20)
factorial(19)
qexp(p=0.25, rate=1/beta)
pexp(90, rate=1/beta, lower.tail=F)
pexp(10, rate=1/beta)
diff(pexp(c(10,20), rate=1/beta)) / pexp(10, rate=1/beta, lower.tail=F)
p2 = pexp(10, rate=1/beta, lower.tail=F) # P (T > 10)
p1 / p2
p1 = diff(pexp(c(10,20), rate=1/beta)) # P(10 < T < 20)
p1 / p2
pexp(10, rate=1/beta)
ppois(2, lambda=9/4, lower.tail=F)
1 - ppois(2, lambda=9/4) # another way to calculate
p = pexp(90, rate=1/beta, lower.tail=FALSE)
pbinom(0, size=5, p=p, lower.tail=FALSE)
p = pexp(90, rate=1/beta, lower.tail=FALSE); p
pbinom(0, size=5, p=p, lower.tail=FALSE)
1 - dbinom(0, size=5, p=p)
diff(pbinom(c(145, 163), size=600, p=0.25))
diff(pbinom(c(144, 163), size=600, p=0.25))
diff(pnorm(c(144.5, 163.5), mean=600*0.25, sd=sqrt(600*0.25*0.75)))
n=10^5
X = runif(n=n, min=0, max=1)
Y = runif(n=n, min=0, max=1)
head(X)
probBothBetweenHalf <- sum((X <= 0.5) & (Y <= 0.5))/n
probBothBetweenHalf
n = 500 # sample of size 500 from bivariate uniform.
u1 <- runif(n=n, min=0, max=1)
u2 <- runif(n=n, min=0, max=1)
# logical vec depending on whether conditions are met
logicBothBetweenHalf <- (u1 < 05.) & (u2 < 0.5)
logicBothBetweenHalf
probBothBetweenHalf <- sum((u1 < 05.) & (u2 < 0.5))
probBothBetweenHalf
probBothBetweenHalf <- sum((u1 < 05.) & (u2 < 0.5)) / n
probBothBetweenHalf
theSim <- 0
library(reshape2)
theSim <- 0
# repeat sampling 1000 times
for(i in 1:1000) {
n = 500 # sample of size 500 from bivariate uniform.
u1 <- runif(n=n, min=0, max=1)
u2 <- runif(n=n, min=0, max=1)
# logical vec depending on whether conditions are met
probBothBetweenHalf <- sum((u1 < 05.) & (u2 < 0.5)) / n
#store result from each sample (i)
theSim[i] = probBothBetweenHalf
}
theSim
melt(data)
data <- melt(data.frame(theSim))
data
head(data)
ggplot(data, aes(y=value)) + geom_density()
library(ggpl2)
Library(ggplot2)
library(ggplot2)
ggplot(data, aes(y=value)) + geom_density()
data <- data.frame(theSim)
ggplot(data, aes(x=theSim)) + geom_density()
ggplot(data, aes(x=theSim)) + geom_density(size=2, colour="hotpink")
ggplot(data, aes(x=theSim)) + geom_histogram()
ggplot(data, aes(x=theSim)) + geom_histogram(colour="hotpink")
ggplot(data, aes(x=theSim)) + geom_histogram(fill="hotpink")
ggplot(data, aes(x=theSim)) + geom_histogram(fill="lightpink")
theSim <- 0
# repeat sampling 1000 times
for(i in 1:1000) {
n = 500 # sample of size 500 from bivariate uniform.
u1 <- runif(n=n, min=0, max=1)
u2 <- runif(n=n, min=0, max=1)
# logical vec depending on whether conditions are met
probBothBetweenHalf <- sum((u1 < 05.) & (u2 < 0.5)) / n
#store result from each sample (i)
theSim[i] = probBothBetweenHalf
}
library(ggplot2)
data <- data.frame(theSim)
ggplot(data, aes(x=theSim)) + geom_density(size=2, colour="hotpink")
ggplot(data, aes(x=theSim)) + geom_histogram(fill="lightpink")
sampleSize <- 10^4
die1 <- sample(x=1:6, size=sampleSize, replace=TRUE) # each prob = 1/6
die2 <- sample(x=1:6, size=sampleSize, replace=TRUE) # each prob = 1/6
jointProb <- table(die1, die2)/sampleSize
jointProb
table(die1, die2)
jointProb[5:6]
jointProb[5:6]
fives <- (die1 == 5) + (die2==5)
sixes <- (die1 == 6) + (die2 == 6)
jointProb56 <- table(fives, sixes)/sampleSize
jointProb56
diag(table(die1, die2)[5:6]/sampleSize)
jointProb[5:6] # this is the joint probability of
diag(table(die1, die2))[5:6]/sampleSize
jointProb56
prob56 <- diag(table(die1, die2))[5:6]/sampleSize
jointProb56
jointProb56
jointProb56[3,1]
jointProb56[1,3]
(2/3)^2
mu_I = 29.87
mu_C = 31.77
sd_I=7.71
sd_C = 7.86
p = 0.957
# part d) pdf of Canandaigua temperature (had muC, varC)
lower <- mu_C - 4 * sd_C
upper <- mu_C + 4 * sd_C
xs <- seq(lower, upper, length=10^3)
ys = dnorm(x=xs, mean=mu_C, sd=sd_C)
df <- data.frame(xs=xs, ys=ys)
ggplot() +
geom_line(data=df, aes(x=xs, y=ys), size=1, colour="blue") +
geom_vline(xintercept=mu_C, colour="black", linetype="dashed", size=1) +
ggtitle("Normal Density of Canandaigua Max Temperature")
mu_C_given_I <- function(i) mu_C + p * (sd_C/sd_I) * (i - mu_I)
sd_C_given_I <- sd_C^2 * (1 - p^2)
df.cond <- data.frame(xs=xs, ys=dnorm(x=xs, mean=mu_C_given_I(25), sd=sd_C_given_I))
ggplot() +
geom_line(data=df.cond, aes(x=xs, y=ys), size=1, colour="red") +
geom_vline(xintercept=mu_C_given_I(25), colour="black", linetype="dashed",
size=1) +
ggtitle("Conditional Normal PDF of Canadaigua given Ithaca = 25 degrees F")
x1 <- x2 <- seq(0, 1, length=128)
x1
x2
const <- 6/5
var.grid <- expand.grid("x1", =x1, "x2"=x2)# create grid of bivarate rvs
var.grid <- expand.grid("x1" =x1, "x2"=x2)# create grid of bivarate rvs
var.grid
X1 <- var.grid$x1
X2 <- var.grid$x2
X2
?expand.grid
x <- seq(0, 10, length.out = 100)
y <- seq(-1, 1, length.out = 20)
d1 <- expand.grid(x = x, y = y)
length(x)
length(y)
d1
head(d1)
head(d1, 103)
jointPDF <- const * (X1 + X2^2)
jointPDF
jointPDF <- matrix(jointPDF, ncol=128, nrow=128)
jointPDF
x11()
jointPDF # typecast as matrix.
x11()
persp(z=jointPDF, y=x1, x=x2, col="lightblue") # perspective plot
x11()
image(jointPDF, xlab="x1", ylab="x2", col=heat.colors(256))
# image view
axis(side=1, at = seq(0,1,by=0.2), labels=seq(0,1,length=6))
axis(side=2, at = seq(0,1,by=0.2), labels=seq(0,1,length=6))
contour(jointPDF, nlevels=10, add=TRUE)
indices <- which(X1 <= 0.5 & X2 <= 0.5)
indices
head(indices)
head(indices, 20)
regionOfInterest <- jointPDF[indices]
regionOfInterest
prob <- sum(regionOfInterest * (1/128^2)) # calculate probability using a riemann sum.
prob
N <- 128
qf(4.914,df1=4,df2=30)
qf(4.914,df1=4,df2=30, lower.tail=F)#
?qf#
qf(0.025, df1=4, df2=30)
qf(0.975, df1=4, df2=30)
pf(4.914, df1=4, df2=30)
1-pf(4.914, df1=4, df2=30)
qf(0.05, df1=2, df2=18)
qf(0.05, df1=2, df2=18, lower.tail=FALSE)
qf(0.95, df1=2, df2=18)
qf(0.95, df1=3, df2=56)
setwd("/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/")
options(digits=10, show.signif.stars = FALSE)
load("data/Exercises and Examples/DRINKERS.Rdata")
View(DRINKERS)
drinkers.lm <- lm(SCORE ~ GROUP, data=DRINKERS)
summary(drinkers.lm)
load("data/Exercises and Examples/NAMEGAME.Rdata")
View(NAMEGAME)
name.lm <- lm(RECALL ~ GROUP, data=NAMEGAME) # p = 3 treatments
summary(name.lm)
anova(name.lm)
NAMEGAME$GROUP <- factor(NAMEGAME$GROUP)
name.lm <- lm(RECALL ~ GROUP, data=NAMEGAME) # p = 3 treatments
summary(name.lm)
anova(name.lm)
load("data/Exercises and Examples/HONEYCOUGH.Rdata")
View(HONEYCOUGH)
honey.lm <- lm(TOTSCORE ~ TREATMENT, data=HONEYCOUGH)
summary(honey.lm)
load("data/Exercises and Examples/TILLRATIO.Rdata")
View(TILLRATIO)
glacier.lm <- lm(RATIO ~ BOREHOLE, data=TILLRATIO)
summary(glacier.lm)
load("data/Exercises and Examples/ACCHW.Rdata")
View(ACCHW)
account.lm <- lm(IMPROVE ~ ASSIST, data=ACCHW)
summary(account.lm)
anova(account.lm)
load("data/Exercises and Examples/COSTENG.Rdata")
View(COSTENG)
engjob.lm <- lm(COST ~ ENGINEER + JOB, data=COSTENG)
summary(engjob.lm)
COSTENG$ENGINEER <- factor(COSTENG$ENGINEER)
COSTENG$JOB <- factor(COSTENG$JOB)
engjob.lm <- lm(COST ~ ENGINEER + JOB, data=COSTENG)
summary(engjob.lm)
anova(engjob.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
DevianceTest(engjob.lm)
eng.glm <- glm(COST ~ ENGINEER + JOB, data=COSTENG)
DevianceTest(eng.glm)
engjob.glm <- glm(COST ~ ENGINEER + JOB, data=COSTENG)
summary(engjob.glm)
summary(engjob.lm)
anova(engjob.glm)
anova(engjob.glm, test="Chisq")
DevianceTest(eng.glm) # this is the global F-test
NestedFTest()
DevianceTest(eng.glm) # this is the global F-test
anova(engjob.glm, test="Chisq")
7.2100000-0.1866667
enjob.null.lm <- lm(COST ~ 1, data=COSTENG)
enjob.blockTest.lm <- lm(COST ~ ENGINEER, data=COSTENG)
engjob.blockTest.lm <- lm(COST ~ ENGINEER, data=COSTENG)
engjob.treatTest.lm <- lm(COST ~ JOB, data=COSTENG)
engjob.null.lm <- lm(COST ~ 1, data=COSTENG)
anova(engjob.null.lm, engjob.lm, test="Chisq")
NestedFTest(engjob.null.lm, engjob.lm)
summary(engjob.lm)
engjob.lm <- lm(COST ~ ENGINEER + JOB, data=COSTENG)
anova(engjob.null.lm, engjob.lm, test="Chisq")
NestedFTest(engjob.null.lm, engjob.lm)
7.0233333^2
df <- NestedFTest(engjob.null.lm, engjob.lm)
df
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
df <- NestedFTest(engjob.null.lm, engjob.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
df <- NestedFTest(engjob.null.lm, engjob.lm)
length(engjob.null.lm$coefficients)
enjob.null.lm$coefficients
names(engjob.null.lm$model)
names(engjob.blockTest.lm$model)
names(engjob.lm$model)
engjob.lm$coefficients
engjob.blockTest.lm$coefficients
length(engjob.null.lm$coefficients) - length(engjob.lm$coefficients)
df1=5
df2=nrow(COSTENG)-6
see.r = SSE(engjob.null.lm)
see.c <- SSE(engjob.lm)
F = ((see.r - see.c)/df1)/(see.c/df2)
F#
1 - pf(F, df1=df1, df2=df2)
anova(engjob.null.lm, engjob.lm)
NestedFTest(engjob.null.lm, engjob.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
NestedFTest(engjob.null.lm, engjob.lm)
u.lm <- engjob.lm
r.lm <- engjob.null.lm
df1 = length(r.lm$coef) - 1
df1
df2 = nrow(u.lm$model) - (length(u.lm$coef)) - 1
df2
anova(r.lm, u.lm)
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
NestedFTest(engjob.null.lm, engjob.lm)
anova(engjob.null.lm, engjob.lm, test="Chisq")
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/FORMULAS.R', echo=TRUE)
df <- NestedFTest(engjob.null.lm, engjob.lm)
nrow(COSTENG)
coef(engjob.lm)
length(coef(engjob.lm))
df
anova(engjob.null.lm, engjob.lm, test="Chisq")
anova(engjob.blockTest.lm, engjob.lm)
NestedFTest(enjob.blockTest.lm, engjob.lm)
anova(engjob.treatTest.lm, engjob.lm)
NestedFTest(engjob.treatTest.lm, engjob.lm)
NestedFTest(engjob.blockTest.lm, engjob.lm)
anova(engjob.treatTest.lm, engjob.lm)
anova(engjob.blockTest.lm, engjob.lm)
anova(engjob.lm)
0.2600000+6.7633333+0.1866667
head(COSTENG)
sum(COSTENG$COST)^2/nrow(COSTENG)
table(COSTENG$JOB, COSTENG$ENGINEER)
COSTENG$JOB <- as.numeric(COSTENG$JOB)
COSTENG$ENGINEER <- as.numeric(COSTENG$ENGINEER)
table(COSTENG$JOB, COSTENG$ENGINEER)
is.factor(COSTENG$JOB)
anova(engjob.blockTest.lm, engjob.lm)
anova(engjob.treatTest.lm, engjob.lm)
load("data/Exercises and Examples/GENEDARK.Rdata")
View(GENEDARK)
genedark.lm <- lm(GeneID ~ FULLDARK + TRLIGHT + TRDARK, data=GENEDARK)
View(COSTENG)
1-pf(1.46, df1=12, df2=96)
6.4444444.0.53703704
6.4444444/0.53703704
6.4444444444/12
load("data/Exercises and Examples/JEANS.Rdata")
View(JEANS)
jeans.lm <- lm(ABSRATE ~ WEEK + DAY, data=JEANS )
summary(jeans.lm)
is.factor(JEANS$WEEK)
JEANS$WEEK <- factor(JEANS$WEEK)
jeans.lm <- lm(ABSRATE ~ WEEK + DAY, data=JEANS )
summary(jeans.lm)
admitData <- data.frame(gender=c(rep("Male",6),rep("Female",6)),
dept=rep(c("A","B","C","D","E", "F"),2),
admitted=c(512,353,120,138,53,22,89,17,202,131,94,24),
rejected=c(313,207,205,279,138,351,19,8,391,244,299,317))
admitData
count <- cbind(admitData$admitted, admitData$rejected)
admit.glm <- glm(count ~ gender + dept, data=admitData, family=binomial)
summary(admit.glm)
cof <- summary(admit.glm)$coef # all coefs are significant
cof
exp(cof[,1:2])-1
summary(jeans.lm)
jeans.lm <- lm(ABSRATE ~ DAY + WEEK, data=JEANS )
summary(jeans.lm)
anova(jeans.lm)
jeans.lm <- lm(ABSRATE ~ WEEK + DAY, data=JEANS )
anova(jeans.lm)
load("data/Exercises and Examples/BOXING.Rdata")
View(BOXING)
is.factor(BOXING$BOXER)
BOXING$BOXER <- factor(BOXING$BOXER)
boxing.lm <- lm(POWER ~ BOXER + ROUND, data=BOXING)
summary(boxing.lm)
anova(boxing.lm)
boxer.lm <- lm(POWER ~ BOXER, data=BOXING)
NestedFTest(boxer.lm, boxing.lm)
anova(boxing.lm)
rounds.lm <- lm(POWER ~ ROUND, data=BOXING)
NestedFTest(rounds.lm, boxing.lm)
anova(rounds.lm, boxing.lm)
summary(boxing.lm)
load("data/Exercises and Examples/BOXING.Rdata")
boxing.lm <- lm(POWER ~ BOXER + ROUND, data=BOXING)
summary(boxing.lm)
is.factor(BOXING$BOXER)
BOXING$BOXER <- factor(BOXING$BOXER)
boxing.lm <- lm(POWER ~ BOXER + ROUND, data=BOXING)
summary(boxing.lm)
anova(boxing.lm)
anova(rounds.lm, boxing.lm)
NestedFTest(rounds.lm, boxing.lm)
load("data/Exercises and Examples/EPOXY.Rdata")
View(EPOXY)
is.factor(EPOXY$EXPTIME)
is.factor(EPOXY$SYSTEM)
EPOXY$EXPTIME <- factor(EPOXY$EXPTIME)
EPOXY$SYSTEM <- factor(EPOXY$SYSTEM)
epoxy.lm <- lm(CORRATE ~ EXPTIME + SYSTEM, data=EPOXY)
anova(epoxy.lm)
setwd("/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/")
load("data/Exercises and Examples/RAWMATERIAL.Rdata")
options(digits=10, show.signif.stars = FALSE)
View(RAWMATERIAL)
raw.lm <- lm(PROFIT ~ SUPPLY + RATIO, data=RAWMATERIAL)
summary(raw.lm)
anova(raw.lm)
RAWMATERIAL$RATIO <- factor(RAWMATERIAL$RATIO)
RAWMATERIAL$SUPPLY <- factor(RAWMATERIAL$SUPPLY)
raw.lm <- lm(PROFIT ~ SUPPLY + RATIO, data=RAWMATERIAL)
summary(raw.lm)
raw.lm <- lm(PROFIT ~ SUPPLY + RATIO + SUPPLY:RATIO, data=RAWMATERIAL)
summary(raw.lm)
anova(raw.lm)
load("data/Exercises and Examples/RAWMATERIAL.Rdata")
raw.lm <- lm(PROFIT ~ SUPPLY + RATIO + SUPPLY:RATIO, data=RAWMATERIAL)
summary(raw.lm)
RAWMATERIAL$RATIO <- factor(RAWMATERIAL$RATIO)
RAWMATERIAL$SUPPLY <- factor(RAWMATERIAL$SUPPLY)
raw.lm <- lm(PROFIT ~ SUPPLY + RATIO + SUPPLY:RATIO, data=RAWMATERIAL)
summary(raw.lm)
anova(raw.lm)
RAWMATERIAL$SUPPLY <- relevel(RAWMATERIAL$SUPPLY, 21)
RAWMATERIAL$SUPPLY <- relevel(RAWMATERIAL$SUPPLY, "21")
levels(RAWMATERIAL$SUPPLY)
levels(RAWMATERIAL$RATIO)
RAWMATERIAL$RATIO <- relevel(RAWMATERIAL$RATIO, "2")
levels(RAWMATERIAL$RATIO)
raw.lm <- lm(PROFIT ~ SUPPLY + RATIO + SUPPLY:RATIO, data=RAWMATERIAL)
summary(raw.lm)
anova(raw.lm)
raw.null.lm <- lm(PROFIT ~ 1, data=RAWMATERIAL)
anova(raw.null.lm, raw.lm)
raw.main.lm <- lm(PROFIT ~ SUPPLY + RATIO, data=RAWMATERIAL)
summary(raw.main.lm)
anova(raw.main.lm)
anova(raw.null.lm, raw.main.lm)
anova(raw.lm)
46.222222/4
43.333333/18
11.5555555/2.407407389
interaction.plot(x.factor=RATIO, trace.factor = SUPPLY, response=PROFIT)
with(RAWMATERIAL, interaction.plot(x.factor=RATIO, trace.factor = SUPPLY, response=PROFIT))
source('/datascience/projects/statisticallyfit/github/R/RStatistics/STAT210 Statistical Modelling and Experimental Design/PLOTTING.R', echo=TRUE)
interactionPlot(data=RAWMATERIAL, xFactor = "RATIO", traceFactor = "SUPPLY", response="PROFIT")
anova(raw.lm)
anova(raw.null.lm, raw.lm)
4.1111111/2.4074074
with(RAWMATERIAL, interaction.plot(x.factor=SUPPLY, trace.factor = RATIO, response=PROFIT))
View(RAWMATERIAL)
