multinom.test.half <- chisq.test(soccer$Freq +0.5); multinom.test.half
likelihoodRatioTest.1(multinom.test.half$observed, multinom.test.half$expected)
devianceResidOneWay(multinom.test.half$obs, multinom.test.half$exp)
pois.test <- chisq.test(soccer$Freq, p = pi.hat, rescale.p = TRUE); pois.test
pois.test$expected
pois.test$observed
pois.test$statistic
multinom.test$expected
pois.test$expected
?chisq.test
sum(pi.hat)
pois.test$residuals
soccer$Freq
likelihoodRatioTest.1(multinom.test.half$observed, multinom.test.half$expected)
devianceResidOneWay(multinom.test.half$obs, multinom.test.half$exp)
length(soccer$Freq)
cutoff <- sqrt((df-1)/df); cutoff
cutoff <- sqrt((df-1)/df); cutoff
df <- length(soccer$Freq) - 1; df
df-1
(df-1)/df
sqrt((df-1)/df)
cutoff <- sqrt((df-1)/df); cutoff
pois.test$expected
pois.test$observed
pois.test$statistic
pois.test$residuals
pi.hat
pois.test <- chisq.test(soccer$Freq, p = pi.hat, rescale.p = TRUE); pois.test
pois.test$expected
pois.test$observed
pois.test$statistic
pois.test$residuals
df <- length(soccer$Freq) - 1; df
cutoff <- sqrt((df-1)/df); cutoff
cutoff <- sqrt((df-1)/df); cutoff # limit magnitude for residuals before bad model.
pois.test$residuals
pois.test$p.value
pois.test$residuals
good.df <- length(soccer$Freq) - 1 - 1
good.df <- length(soccer$Freq) - 1 - 1; good.df
1 - pchisq(pois.test$statistic) # p.value
1 - pchisq(pois.test$statistic, good.df) # p.value
1-pchisq(G2, 6) # how to calculate df?
pois.test$statistic
pois.test$statistic[1]
class(pois.test$statistic)
pois.test$statistic
pois.test$p.value
pois.test$residuals
data.frame(pois.test$statistic)
data.frame(pois.test$statistic)[,1]
chi.stat <- data.frame(pois.test$statistic)[,1]; chi.stat
1 - pchisq(chi.stat, good.df) # p.value
output.pois <- data.frame(goals=0:8, obs=pois.test$obs, exp=pois.test$exp,
res=pois.test$residuals); output.pois
source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[PennState] GeneralizedLinearModels/OneWayTable/GoodnessOfFit_Mult_Pois_Soccer.R', echo=TRUE)
source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/StatsFormulas.R', echo=TRUE)
source("/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/StatsFormulas.R")
source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[PennState] GeneralizedLinearModels/OneWayTable/GoodnessOfFit_Mult_Pois_Soccer.R', echo=TRUE)
output.pois <- data.frame(goals=0:8, obs=pois.test$obs, exp=pois.test$exp,
res=pois.test$residuals); output.pois
output.pois
G2 <- 2 * sum(pois.test$obs * log(pois.test$obs / pois.test$exp), na.rm=TRUE)
G2
1-pchisq(G2,7)
1-pchisq(G2,good.df)
multinom.test$expected
pois.test$expected
good.df <- length(soccer$Freq) - 1 - 1; good.df
chi.stat <- data.frame(pois.test$statistic)[,1]; chi.stat
1 - pchisq(chi.stat, good.df) # p.value
output.pois <- data.frame(goals=0:8, obs=pois.test$obs, exp=pois.test$exp,
res=pois.test$residuals)
output.pois
output.mult
df.mult <- length(soccer$Freq) - 1
output.mult <- data.frame(goals=0:8, O_j=multinom.test$obs,
E_j=multinom.test$exp,
res_j=multinom.test$res,
cutoff=sqrt((df-1)/df))
output.mult
likelihoodRatioTest.1(multinom.test$observed, multinom.test$expected)
# deviance residuals --- zero problem
devianceResidOneWay(multinom.test$obs, multinom.test$exp)
multinom.test  # without 1/2 to cells
multinom.test.half <- chisq.test(soccer$Freq +0.5); multinom.test.half
likelihoodRatioTest.1(multinom.test.half$observed, multinom.test.half$expected)
# deviance residuals ---- adding 1/2 count to cells
devianceResidOneWay(multinom.test.half$obs, multinom.test.half$exp)
devianceResidOneWay(multinom.test$obs, multinom.test$exp)
G2 <- 2 * sum(multinom.test$obs * log(multinom.test$obs / multinom.test$exp),
na.rm=TRUE); G2
pi.hat
pois.test <- chisq.test(soccer$Freq, p = pi.hat, rescale.p = TRUE); pois.test
pois.test$expected
pois.test$observed
pois.test$statistic
pois.test$p.value
pois.test$residuals
df <- length(soccer$Freq) - 1; df
df.pois <- length(soccer$Freq) - 1; df .pois
df.pois.good <- length(soccer$Freq) - 1 - 1; df.pois.good
chi.stat <- data.frame(pois.test$statistic)[,1]; chi.stat
1 - pchisq(chi.stat, df.pois.good) # p.value
output.pois <- data.frame(goals=0:8, obs=pois.test$obs, exp=pois.test$exp,
res=pois.test$residuals, cutoff)
output.pois
output.mult
output.pois
cutoff <- sqrt((df.pois.good-1)/df.pois.good); cutoff # limit magnitude for Pearson
output.pois <- data.frame(goals=0:8, obs=pois.test$obs, exp=pois.test$exp,
res=pois.test$residuals, cutoff)
output.pois
output.mult
G2 <- 2 * sum(pois.test$obs * log(pois.test$obs / pois.test$exp), na.rm=TRUE)
G2
1-pchisq(G2, df.pois.good)
source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[PennState] GeneralizedLinearModels/OneWayTable/GoodnessOfFit_Mult_Pois_Soccer.R', echo=TRUE)
source("/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/StatsFormulas.R")
source("/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[PennState] GeneralizedLinearModels/OneWayTable/PoissonSampling_Soccer.R")
## (I) Goodness of fit Multinomial null model (ignoring LAMBDA estimate) --------------
soccer
multinom.test <- chisq.test(soccer$Freq); multinom.test
multinom.test$statistic
multinom.test$p.value
multinom.test$residuals
# output table
df.mult <- length(soccer$Freq) - 1
output.mult <- data.frame(goals=0:8, O_j=multinom.test$obs,
E_j=multinom.test$exp,
res_j=multinom.test$res,
cutoff=sqrt((df-1)/df))
output.mult
# likelihood ratio test --- zero problem
likelihoodRatioTest.1(multinom.test$observed, multinom.test$expected)
# deviance residuals --- zero problem
devianceResidOneWay(multinom.test$obs, multinom.test$exp)
# likelihood ratio test --- adding 1/2 count to cells
multinom.test  # without 1/2 to cells
multinom.test.half <- chisq.test(soccer$Freq +0.5); multinom.test.half
likelihoodRatioTest.1(multinom.test.half$observed, multinom.test.half$expected)
# deviance residuals ---- adding 1/2 count to cells
devianceResidOneWay(multinom.test.half$obs, multinom.test.half$exp)
# another (less common) solutions is to do the calculations with all values
# greater than zero for G2 but that fixes the zero cell counts to so we are
# estimating two less paramaters in this example thus the degrees of freedom
# should be adjusted
# option na.rm=TRUE removes all zero values from the calculation
G2 <- 2 * sum(multinom.test$obs * log(multinom.test$obs / multinom.test$exp),
na.rm=TRUE); G2
1-pchisq(G2, 6) # how to calculate df?
# CONCLUSION: Multinomial model doesn't fit well even before nor after adding 1/2
# count to each cell - multinomial is not a good fit.
### (II) Goodness of fit test Poisson null model (with lambda est.) ----------------
pi.hat
# warning because some expected cell counts are less than 0.2
pois.test <- chisq.test(soccer$Freq, p = pi.hat, rescale.p = TRUE); pois.test
pois.test$expected
pois.test$observed
pois.test$statistic
pois.test$p.value
pois.test$residuals
# showing that we are using poisson null model now, and before, the multinomial
multinom.test$expected
pois.test$expected
# dfs are not correct because we estimated lambda first then pi.hats (explain more help)
df.pois.good <- length(soccer$Freq) - 1 - 1; df.pois.good
chi.stat <- data.frame(pois.test$statistic)[,1]; chi.stat
1 - pchisq(chi.stat, df.pois.good) # p.value
# output table
# notice that the model fits well without the cell with large residual.
cutoff <- sqrt((df.pois.good-1)/df.pois.good); cutoff # limit magnitude for Pearson
# residuals before model is declared not to fit well.
output.pois <- data.frame(goals=0:8, obs=pois.test$obs, exp=pois.test$exp,
res=pois.test$residuals, cutoff)
output.pois
output.mult
# new - do calculations without zeros
G2 <- 2 * sum(pois.test$obs * log(pois.test$obs / pois.test$exp), na.rm=TRUE)
G2
1-pchisq(G2, df.pois.good)
# CONCLUSION: the model is not rejected, so poisson fits well (passed test
# AND residuals are not too large)
source("/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/StatsFormulas.R")
source("/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[PennState] GeneralizedLinearModels/OneWayTable/PoissonSampling_Soccer.R")
## (I) Goodness of fit Multinomial null model (ignoring LAMBDA estimate) --------------
soccer
multinom.test <- chisq.test(soccer$Freq); multinom.test
multinom.test$statistic
multinom.test$p.value
multinom.test$residuals
# output table
df.mult <- length(soccer$Freq) - 1
output.mult <- data.frame(goals=0:8, O_j=multinom.test$obs,
E_j=multinom.test$exp,
res_j=multinom.test$res,
cutoff=sqrt((df-1)/df))
output.mult
# likelihood ratio test --- zero problem
likelihoodRatioTest.1(multinom.test$observed, multinom.test$expected)
# deviance residuals --- zero problem
devianceResidOneWay(multinom.test$obs, multinom.test$exp)
# likelihood ratio test --- adding 1/2 count to cells
multinom.test  # without 1/2 to cells
multinom.test.half <- chisq.test(soccer$Freq +0.5); multinom.test.half
likelihoodRatioTest.1(multinom.test.half$observed, multinom.test.half$expected)
# deviance residuals ---- adding 1/2 count to cells
devianceResidOneWay(multinom.test.half$obs, multinom.test.half$exp)
# another (less common) solutions is to do the calculations with all values
# greater than zero for G2 but that fixes the zero cell counts to so we are
# estimating two less paramaters in this example thus the degrees of freedom
# should be adjusted
# option na.rm=TRUE removes all zero values from the calculation
G2 <- 2 * sum(multinom.test$obs * log(multinom.test$obs / multinom.test$exp),
na.rm=TRUE); G2
1-pchisq(G2, 6) # how to calculate df?
# CONCLUSION: Multinomial model doesn't fit well even before nor after adding 1/2
# count to each cell - multinomial is not a good fit.
### (II) Goodness of fit test Poisson null model (with lambda est.) ----------------
pi.hat
# warning because some expected cell counts are less than 0.2
pois.test <- chisq.test(soccer$Freq, p = pi.hat, rescale.p = TRUE); pois.test
pois.test$expected
pois.test$observed
pois.test$statistic
pois.test$p.value
pois.test$residuals
# showing that we are using poisson null model now, and before, the multinomial
multinom.test$expected
pois.test$expected
# dfs are not correct because we estimated lambda first then pi.hats (explain more help)
df.pois.good <- length(soccer$Freq) - 1 - 1; df.pois.good
chi.stat <- data.frame(pois.test$statistic)[,1]; chi.stat
1 - pchisq(chi.stat, df.pois.good) # p.value
# output table
# notice that the model fits well without the cell with large residual.
cutoff <- sqrt((df.pois.good-1)/df.pois.good); cutoff # limit magnitude for Pearson
# residuals before model is declared not to fit well.
output.pois <- data.frame(goals=0:8, obs=pois.test$obs, exp=pois.test$exp,
res=pois.test$residuals, cutoff)
output.pois
output.mult
# new - do calculations without zeros
G2 <- 2 * sum(pois.test$obs * log(pois.test$obs / pois.test$exp), na.rm=TRUE)
G2
1-pchisq(G2, df.pois.good)
# CONCLUSION: the model is not rejected, so poisson fits well (passed test
# AND residuals are not too large)
output.mult
source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[PennState] GeneralizedLinearModels/OneWayTable/GoodnessOfFit_Mult_Pois_Soccer.R', echo=TRUE)
source("/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/StatsFormulas.R")
source("/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[PennState] GeneralizedLinearModels/OneWayTable/PoissonSampling_Soccer.R")
## (I) Goodness of fit Multinomial null model (ignoring LAMBDA estimate) --------------
soccer
multinom.test <- chisq.test(soccer$Freq); multinom.test
multinom.test$statistic
multinom.test$p.value
multinom.test$residuals
# output table
df.mult <- length(soccer$Freq) - 1
output.mult <- data.frame(goals=0:8, O_j=multinom.test$obs,
E_j=multinom.test$exp,
res_j=multinom.test$res,
cutoff=sqrt((df.mult-1)/df.mult))
output.mult
# likelihood ratio test --- zero problem
likelihoodRatioTest.1(multinom.test$observed, multinom.test$expected)
# deviance residuals --- zero problem
devianceResidOneWay(multinom.test$obs, multinom.test$exp)
# likelihood ratio test --- adding 1/2 count to cells
multinom.test  # without 1/2 to cells
multinom.test.half <- chisq.test(soccer$Freq +0.5); multinom.test.half
likelihoodRatioTest.1(multinom.test.half$observed, multinom.test.half$expected)
# deviance residuals ---- adding 1/2 count to cells
devianceResidOneWay(multinom.test.half$obs, multinom.test.half$exp)
# another (less common) solutions is to do the calculations with all values
# greater than zero for G2 but that fixes the zero cell counts to so we are
# estimating two less paramaters in this example thus the degrees of freedom
# should be adjusted
# option na.rm=TRUE removes all zero values from the calculation
G2 <- 2 * sum(multinom.test$obs * log(multinom.test$obs / multinom.test$exp),
na.rm=TRUE); G2
1-pchisq(G2, 6) # how to calculate df?
# CONCLUSION: Multinomial model doesn't fit well even before nor after adding 1/2
# count to each cell - multinomial is not a good fit.
### (II) Goodness of fit test Poisson null model (with lambda est.) ----------------
pi.hat
# warning because some expected cell counts are less than 0.2
pois.test <- chisq.test(soccer$Freq, p = pi.hat, rescale.p = TRUE); pois.test
pois.test$expected
pois.test$observed
pois.test$statistic
pois.test$p.value
pois.test$residuals
# showing that we are using poisson null model now, and before, the multinomial
multinom.test$expected
pois.test$expected
# dfs are not correct because we estimated lambda first then pi.hats (explain more help)
df.pois.good <- length(soccer$Freq) - 1 - 1; df.pois.good
chi.stat <- data.frame(pois.test$statistic)[,1]; chi.stat
1 - pchisq(chi.stat, df.pois.good) # p.value
# output table
# notice that the model fits well without the cell with large residual.
output.pois <- data.frame(goals=0:8, obs=pois.test$obs, exp=pois.test$exp,
res=pois.test$residuals,
cutoff=sqrt((df.pois.good-1)/df.pois.good))
output.pois
output.mult
# new - do calculations without zeros
G2 <- 2 * sum(pois.test$obs * log(pois.test$obs / pois.test$exp), na.rm=TRUE)
G2
1-pchisq(G2, df.pois.good)
# CONCLUSION: the model is not rejected, so poisson fits well (passed test
# AND residuals are not too large)
source("/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/StatsFormulas.R")
obs <- c(19, 26, 29, 13, 13)
obs <- c(19, 26, 29, 13, 13); obs
kids <- c(0, 1, 2, 3)
n <- sum(obs); n
kids <- c(0, 1, 2, 3)
n <- sum(obs); n
lambda.hat <- sum(kids * obs) / n; lambda.hat
lambda.hat <- sum(kids * obs) / n; lambda.hat
kids <- c(0, 1, 2, 3, 4, 5)
obs <- c(19, 26, 29, 13, 10, 3); obs
n <- sum(obs); n
# find estimated expected probabilities
lambda.hat <- sum(kids * obs) / n; lambda.hat
pi.hat <- dpois(x=kids, lambda = lambda.hat); pi.hat
ob<-c(19,26,29,13,13)
ob
lambdahat<-c(19*0+26*1+29*2+13*3+10*4+3*5)/100
lambdahat
kids<-c(0,1,2,3)
pihat<-dpois(kids,lambdahat)
pihat
pi.hat
pihat<-c(pihat,1-sum(pihat))
pihat
pi.hat[4] + pi.hat[5]
pi.hat[4]
pi.hat[1] + pi.hat[5]
pi.hat[1]
pi.hat[5] + pi.hat[6]
pihat<-c(pihat,1-sum(pihat))
pihat
ob<-c(19,26,29,13,13)
ob
# [1] 19 26 29 13 13
#### find estimated expected probabilities
lambdahat<-c(19*0+26*1+29*2+13*3+10*4+3*5)/100
lambdahat
# [1] 1.78
kids<-c(0,1,2,3)
pihat<-dpois(kids,lambdahat)
pihat
# [1] 0.1686381 0.3001759 0.2671566 0.1585129
pi.hat[5] + pi.hat[6]
#### attach the probability for the 4+ cell
pihat
pihat<-c(pihat,1-sum(pihat))
ex<-100*pihat
pihat
ex<-100*pihat
ex<-100*pihat ; ex
X2<-sum((ob-ex)^2/ex)
X2
exp.hat <- n * pi.hat; exp.hat
X2 <- sum((obs - exp)^2/exp); X2
X2 <- sum((obs - exp.hat)^2/exp.hat); X2
G2 <- 2 * sum(obs * log(obs / exp.hat)); G2
1 - pchisq(X2, df=3)
1 - pchisq(G2, df=3)
chi.test <- chisq.test(x=obs, p=pi.hat); chi.test
pi.hat
likelihoodRatioTest.1(obs, exp.hat)
G2 <- 2 * sum(obs * log(obs / exp.hat)); G2
1 - pchisq(G2, df=3)
ob <- c(19, 26, 29, 13, 13)
kids <- c(0,1,2,3)
lambdahat <- kids * ob / 100
kids
kids <- 0:5
kids
obs
kids * obs
sum(kids * obs) / 100
lambdahat <- c(19*0+26*1+29*2+13*3+10*4+3*5)/100
pihat <- dpois(kids, lambdahat)
pihat
kids <- c(0,1,  2,  3)
ob <- c(19, 26, 29, 13, 13)
lambdahat <- c(19*0+26*1+29*2+13*3+10*4+3*5)/100
pihat <- dpois(kids, lambdahat)
pihat
pihat <- c(pihat, 1 - sum(pihat)); pihat
ex <- 100*pihat; ex
x2 <- sum((ob-ex)^2/ex); x2
kids <- c(0, 1, 2, 3) # going to attach 4+ category later
obs <- c(19, 26, 29, 13, 13); obs  # 13 genes for 4+ category
n <- sum(obs); n
lambda.hat <- sum(0*19, 1*26, 2*29, 3*13, 4*10, 5*3) / n; lambda.hat
pi.hat <- dpois(x=kids, lambda = lambda.hat); pi.hat
pi.hat <- c(pi.hat, 1 - sum(pi.hat)); pi.hat
exp.hat <- n * pi.hat; exp.hat
X2 <- sum((obs - exp.hat)^2/exp.hat); X2
# p.value  (df=3 because df = numcells - 1 - 1, where numcells-1 = numparameters)
1 - pchisq(X2, df=3)
chi.test <- chisq.test(x=obs, p=pi.hat); chi.test
G2 <- 2 * sum(obs * log(obs / exp.hat)); G2
1 - pchisq(G2, df=3)
# Likelihood Ratio Test - automatic -------------------
likelihoodRatioTest.1(obs, exp.hat) # but df and thus p-value are incorrect
G2 <- 2 * sum(obs * log(obs / exp.hat)); G2
1 - pchisq(G2, df=3)
df <- 3
1 - pchisq(X2, df)
chi.test <- chisq.test(x=obs, p=pi.hat); chi.test
G2 <- 2 * sum(obs * log(obs / exp.hat)); G2
1 - pchisq(G2, df=3)
source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/StatsFormulas.R')
ski <- matrix(c(31, 17, 109, 122), ncol=2,
dimnames = list(Treatment=c("Placebo", "VitaminC"),
Cold=c("Cold", "NoCold")))
ski
install.packages("vcd")
library(vcd)
ski.yates.test$expected
ski.yates.test <- chisq.test(ski); ski.yates.test
ski.yates.test$observed
ski.yates.test$expected
ski.yates.test$residuals
independence_table(ski)
independence_table(ski, frequency = relative)
independence_table(ski, frequency = "relative")
sum(ski)
ski.yates.test$observed
31/279
109/279
independence_table(ski, frequency = "relative")
independence_table(ski, frequency = "absolute")
ski.yates.test$expected
ski.test$expected
ski.test <- chisq.test(ski, correct = FALSE); ski.test
ski.test$observed
ski.test$expected
ski.yates.test$expected
ski.test$residuals
ski.yates.test$residuals
contingencyTable <- list(Frequency=ski, Expected=ski.test$exp,
Percentage=prop.table(ski),
RowPercentage=prop.table(ski, margin=1),
ColPercentage=prop.table(ski, margin=2))
contingencyTable
deviance.TwoWay(ski)
ski.test
chisq.test(ski, p=ski.test$expected)
ski.test
ski.yates.test
devianceResiduals <- function(obsData, expData=NULL) {
if(!is.null(expData)) chi.test <- chisq.test(obsData, p=expData)
else chi.test <- chisq.test(obsData)
os <- chi.test$obs
es <- chi.test$exp
return(sign(os - es) * sqrt(abs(2 * os * log(os / es))))
}
source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/learnstatistics/[PennState] GeneralizedLinearModels/OneWayTable/GoodnessOfFit_Mult_Dice.R', echo=TRUE)
dev.res.j <- devianceResidOneWay(os, es); dev.res.j
devianceResiduals(os, es)
es
devianceResiduals(ski)
ski.test$residuals
chi <- chisq.test(ski)
chi$observed
chi$expected
os <- chi$observed
es <- chi$expected
sign(os-es) * sqrt(abs(2*os*log(os/es)))
ski.yates.test$residuals
ski.yates.test$eexpected
ski.yates.test$expected
devianceResiduals(ski)
ski.test$residuals
ski.yates.test$residuals
os <- chisq.test(ski)$obs
object.size
os #
es <- chisq.test(ski)$exp
es #
sign(os - es)
log(os/es)
sign(os-es) * sqrt(abs(2*os*log(os/es)))
ski.test$residuals
devianceResiduals(ski)
deviance(soccer)
soccer
deviance(soccer$Freq)
soccer$Freq
chisq.test(soccer$Freq)
test <- chisq.test(soccer$Freq)
test$observed
test$expected
os <- test$observed
es <- test$expected
sign(os - es) * sqrt(abs(2 * os * log(os / es)))
devianceResiduals(rolls.obs <- c(3, 7, 5, 10, 2, 3))
source('/datascience/projects/statisticallyfit/github/learningstatistics/RStatistics/StatsFormulas.R', echo=TRUE)
devianceResiduals(rolls.obs <- c(3, 7, 5, 10, 2, 3))
devianceResiduals(multinom.test$obs)
devianceResiduals(multinom.test.half$obs)
devianceResiduals(ski)
